{"/":{"title":"ü™¥ Discourse Graph Research","content":"Jump into Discourse Graph research [here](https://balos.github.io/quartz/Start-here).\n\n\nApril 2022","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/About-this-notebook":{"title":"About this notebook","content":"Authored By:","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Adding-structure-later-feels-like-a-chore":{"title":"Adding structure later feels like a chore","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\nIn the [[uncertain payoff, regret)](structure now vs. later (uncertain payoff, regret|structure now vs. later (uncertain payoff, regret)]]), people often defer structure until later. For more details on that, see [[Why people prefer to structure later or not at all]]. [[((ozwR1UaGD|*]]))\n\nAdding structure later is a viable alternative, as people likely have a better idea of how their current idea fits into the wider whole. But, we frequently heard that the act of adding structure later **feels like a chore**. \n\nThis showed up when people described processing reading notes, refining old ideas, or managing their queue of work. The idea of a queue of work showed up in many interviews, in a variety of forms.  People would create indexes, pages of TODOs, resource lists, pipelines, areas to review flashcards, or tagged items to return to later. \n\nIdeas were even processed through a queue in certain notebooks, with different stages of an idea categorized (fleeting, literature note, evergreen, etc.) or labeled in a pipeline (premise, develop, completed, etc.).  Some queues were managed specifically, with a spaced repetition algorithm prompting them to return to a prior block.  Others were less formally organized, and people returned to them as a regular, unscheduled part of their work.\n\nA common failure mode for queues was to process the same list multiple times.  For example, someone might look through an inbox of ideas, find the best ones, and then move those over into another list. Then, a month later, they would look through the inbox again, repeating the process.  The problem is that it was difficult to distinguish which ideas they had already processed, so they would repeat the work of screening through ideas they had already screened out. We can see systems like [Allen Wilson's](https://zettelkasten.de/posts/playing-zettelkasten-rpg-through-arbitrary-constraints/) evolve to prevent this repeat work.\n\nOne interviewee went as far as mentioning avoiding the tasks they created to review old notes. Others mentioned reviewing notes felt like repeat effort [[|*]]. \n\nWhile queue processing can be extremely effective to those who have internalized the practice, it was done by very few of our interviewees.\n\nFor more, see: [[C- Current tools do not support flexible exploration and refactoring of structures as they inevitably evolve]].[[((Lrk1wY9wE|*]]))\n\ntl;dr summary\n\t- Existing structural systems are often seen by people as a chore. Existing queue management systems are too tedious. The story is clear ‚Äì most people don't want to spend time refactoring notes. That feels like [[wasted repeated effort]].\n\t- People may decide not to regularly return to past ideas, which will enable them to stay in flow of their current work. Provided the note can stand on its own, or they don‚Äôt need to add on, this quick capture ‚Äúset it and forget it‚Äù can be fine. \n\t- Problems arise when we want to reuse these old ideas. Inevitably the noise in our notebooks is too loud to find the signal we‚Äôre looking for. Creating queues of work to return to later feels like a chore, and our tools don‚Äôt help us resolve this.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Agenda":{"title":"Agenda","content":"Authored by:: [[P- Brendan Langen]]\n\nPlayful time-based note-taking system from [[P- Alexander Griekspoor]], built with a series of sample templates to prompt users into creating .\n\nAn interesting aspect of Agenda is an embedded community forum within the app that enables users to discuss workflows, build on, etc. +\n\n![[Pasted image 20211001101109.png]]\n\n![[Pasted image 20211001101437.png]]\n\nDiscussed in the Metamuse podcast with [[P- Adam Wiggins]] and [[P- Mark McGranahan]].","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Agora":{"title":"Agora","content":"Authored by:: [[P- Brendan Langen]]\n\nAgora is a wiki-like distributed knowledge graph blended with a social network. The shared Agora can be contributed to by anyone who agrees to the social contract. Agora aims to facilitate sharing of synthesis.\n\n[[Q- What synthesis behaviors must be done by an individual and what responsibilities can be distributed to many people]]\n\n[[C- An ideal decentralized knowledge graph would map a social graph and a knowledge graph]]\n\nbuilt by [[P- Flancian]]\n\n![[Pasted image 20210916165952.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Airtable":{"title":"Airtable","content":"Authored by:: [[P- Brendan Langen]]\n\nAirtable is database platform that enables [[end-user programming]] through its [[DSL]]. Airtable markets themselves as a low code editor for building collaborative apps, as many macros and functions are built in as design primitives. \n\nOn the surface, Airtable looks like a spreadsheet, but built-in relational database features allow for greater scaling and advanced uses, including active app storage and maintenance. \n\n![[Pasted image 20210928162721.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Atlas.TI":{"title":"Atlas.TI","content":"Authored by:: [[P- Brendan Langen]] and [[P- Joel Chan]]\n\nAtlas.TI is a is a qualitative data analysis and research tool. While Atlas.TI focuses on a broader set of tools to assist researchers, many \n[[C- Scholars repurpose qualitative data analysis software to facilitate synthesis]]. \n\nAtlas.TI has a robust feature set, including a [[DSL]] that extends the researcher's reach. \n![[Pasted image 20210921172215.png]]\n\nWriteup of using Atlas.TI - https://atlasti.com/2017/02/09/lit-reviews/\n\n![[Pasted image 20210921172109.png]]\n\nAnnotation in the margins.\n![[Pasted image 20210921172131.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-A-DSL-could-be-a-powerful-interface-for-entering-information-into-a-discourse-graph":{"title":"C- A DSL could be a powerful interface for entering information into a discourse graph","content":"Authored By:: [[P- Rob Haisfield]]\n\n[[C- A structural editor can make a DSL approachable to end-users]]\n\n[[C- A DSL would let people write in a certain syntax and notation that gets transformed by functions into a data structure that can be manipulated by pre-built or custom-built functions]]\n\n[[C- End user programming enables people to bulk process notes]] and a DSL enables that.\n\nSome examples might include using attributes in Roam to indicate key-value pairs, or [[I- I should be able to leave a hole to fill in the blanks for an idea or domain|being able to leave a hole]] for later input (like in algebra, you figure out what x is in x+3=11 after writing out the equation).\n\n[[C- A DSL speeds up the author]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-A-key-requirement-to-participating-in-a-discourse-graph-for-a-specific-domain-is-knowing-the-vocabulary-used-in-that-graph":{"title":"C- A key requirement to participating in a discourse graph for a specific domain is knowing the vocabulary used in that graph","content":"Authored By:: \n\nSearch queries only work when the searcher knows the vocabulary used in the information being searched. If I were trying to find the answer to a question about cancer biology, I might search Google Scholar or PubMed and find nothing, while an expert would easily find the answer, simply because they know the vocabulary and I don't. \n\n[[Q- How do we solve the problem of different people referring to the same concept with different language]]? A key barrier to interdisciplinary synthesis is simply that people are unaware of the fact that people in other fields are asking the same questions with different language. This means that it will be important for the [[Search Behavior]] affordances to support people's ability to learn the vocabulary of the fields they are querying. *See [[R- Information Foraging Video#^OPpY9M|Mr Taggy as a potential solution]]*","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-A-structural-editor-can-make-a-DSL-approachable-to-end-users":{"title":"C- A structural editor can make a DSL approachable to end-users","content":"Authored By:: [[P- Rob Haisfield]]\n\nText does not need to be people's interface for editing code. Structural editors like Fructure can make it impossible to write code that doesn't work. Based on the function you are writing, it will suggest valid arguments to you. Advanced, context-aware autocomplete can perform the same job.\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/CnbVCNIh1NA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\nSpreadsheets make CSVs more approachable.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-A-structural-editor-could-allow-people-to-make-and-edit-data-structures":{"title":"C- A structural editor could allow people to make and edit data structures","content":"Authored By:: [[P- Rob Haisfield]]\n\n![[Notion#^f7c051]]\n\n[[TheBrain]] has a graphical and textual interface for navigating and editing your documents.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-An-ideal-decentralized-knowledge-graph-would-map-a-social-graph-and-a-knowledge-graph":{"title":"C- An ideal decentralized knowledge graph would map a social graph and a knowledge graph","content":"Authored By::\n[[Q- Should social knowledge management be thought of as social networks with really solid defaults, conventions, and incentives]]\n\n[[Q- Can the blockchain be used to improve citation chains]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Context-is-necessary-for-knowledge-reuse":{"title":"C- Context is necessary for knowledge reuse","content":"Authored By:: [[P- Joel Chan]]\n\nThere is a long history of research in computer-supported cooperative work (CSCW) that documents how knowledge needs to be contextualized to be usefully reused. \n\nOne common way that this insight has been demonstrated is when reuse fails due to a lack of context. For example, in a case study of calendar systems, [[R- Information and Context|@dourishInformationContextLessons1993]] documented how having metadata for event information such as the title of the event or arrival time of the speaker, in addition to who the author of the information is, were critical for the interpretation of the events. Similarly, [[R- Context Grabbing Assigning Metadata in Large Document Collections|@hinrichsContextGrabbingAssigning2005]] documented how decentralized project documentation made recontextualization difficult for engineers because they didn't know the history of changes for a document or if a particular document was up to date, leading to issues such as \"exploratory digging by hand\" to avoid damaging power lines. Finally, in a field study of collaborative information reuse in aircraft technical support [[R- Beyond Boundary Objects|@luttersBoundaryObjectsCollaborative2007]], engineers lamented reusing old records because information was missing, outdated, or not appropriate anymore because of procedural changes. Over the years if any changes to the records were not tagged, the context of those changes were lost.\n\nCloser to the setting of synthesis that we care about, context can refer to methodological details like who was studied and with what measures, as well as the intellectual history of the authors of a study [[R- Collaborative information synthesis I]]. Properly contextualizing knowledge claims with these details can mean the difference between loosely or superficially assembling an argument, or an [[Q- What is synthesis | effective synthesis]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Contextualizability-is-necessary-for-synthesis":{"title":"C- Contextualizability is necessary for synthesis","content":"Authored By::","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Current-tools-do-not-support-flexible-exploration-and-refactoring-of-structures-as-they-inevitably-evolve":{"title":"C- Current tools do not support flexible exploration and refactoring of structures as they inevitably evolve","content":"Authored By:: [[P- Rob Haisfield]]\n\n\n\nPredefining a system limits our ability to explore alternatives outside the current structure.  This cascades into the decisions to be made while in the act of work ‚Äì what folder to place the note in, what naming conventions to use, what metadata should be added, and on.  \n\nWhen something doesn't feel like it fits into a pre-existing structure, participants would feel stressed out. This happens frequently while exploring a new domain of knowledge, as people don‚Äôt yet know what the most useful schema will be. People also like to change their schemas as their skill with a thought processor increases and they learn more optimal paths.\n\nA simple, practical example: \n\nImagine you have a template for each book you read, but you want to add additional attributes later. Updating your template is nice, but it doesn't highlight what's missing from current files. This creates more work for yourself whenever you want to make an update!\n\nIn note writing tools like Obsidian and Athens, adding this new metadata to instances of the template in hindsight is entirely manual.  [[It's hard to change structure later]]. In a relational database like Notion or Airtable, the process is a little easier: add a new column to the table and filter or apply conditional formatting for empty fields.\n\nOf course, done correctly, this structure can also enable easier reuse of past thoughts and the sharing of ideas with others. As we‚Äôve discussed, structure is not a bad thing! However, the limitations of predefining structure are worth noting. Choosing not to define consistent attributes, or simply using implicit structure in notes, allows for flexibility in our thought process and preserves optionality.  On the downside, this limits our ability for rich querying and flexibility of ‚Äúviews‚Äù down the road. Then we have to rely on our calcified memory of attributes to refactor our work. \n\nIf we want structure in our notes, our current tools require that we explicitly add it, in the form of names, placement or attributes. Certain sorts of structure are more rigid than others. For example, open ended metadata enabled email to be expanded into new use cases.\n    - \u003e¬†You can add any headers you like. This makes the set of headers an open set, enabling new use-cases to evolve from the bottom-up. Want to record the title, author, and publish date of your books? Add some headers. Want to include a location? Add a header.¬†\n\n[[P- Gordon Brander]] [If headers did not exist, it would be necessary to invent them](https://subconscious.substack.com/p/if-headers-did-not-exist-it-would)\n\nAlso, whether there are multiple paths to the data is important.  For example, someone using Roam might be more comfortable throwing many types of structure at the wall because they know if one system fails to resurface a note¬†they likely have a fallback. In a file / folder system like Evernote, the folder location of a note matters much more because search is your only fallback if you don't remember which folder a note was in. [[((6H88k-kED|*]]))\n\nFor more details on how to enable restructuring in hindsight, see [[I- Search as a part of the primitive design Index]] and [[Agora]], as well as the question [[Q- How might we allow people to adapt their past system and notes to current needs]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Discourse-graphs-could-significantly-accelerate-human-synthesis-work":{"title":"C- Discourse graphs could significantly accelerate human synthesis work","content":"---\n\n\nAuthored By:: [[P- Joel Chan]]\n\nAn exciting hypothesis that motivates this work is that making discourse graphs widely available could accelerate human synthesis work, and thereby [[C- Effective synthesis is necessary for innovation and scientific progress | accelerate innovation and scientific discovery]].\n\nTo understand why this information model might augment synthesis, consider a researcher who wants to understand what interventions might be most promising for mitigating online harassment. To synthesize a formulation of this complex interdisciplinary problem that can advance the state of the art, she needs material that can help her work through detailed answers to a range of questions. For example, which theories have the most empirical support in this particular setting? Are there conflicting theoretical predictions that might signal fruitful areas of inquiry? What are the key phenomena to keep in mind when designing an intervention (e.g., perceptions of human vs. automated action, procedural considerations, noise in judgments of wrongdoing, scale considerations for spread of harm)? What intervention patterns (whether technical, behavioral, or institutional) have been proposed that are both a) judged on theoretical and circumstantial grounds as likely to be effective in this setting, and b) lacking in direct evidence for efficacy?\n\nThe answers to these questions cannot be found simply in the titles of research papers, in groupings of papers by area, or even in citation or authorship networks. The answers lie at lower levels of granularity: the level of theoretical and empirical **claims** or statements made within publications. For example, \"viewers in a Twitch chat engaged in less bad behaviors after a user was banned by a moderator for bad behavior\", and \"banning bad actors from a subreddit in 2015 was somewhat effective at mitigating spread of hate speech on other subreddits\" are claims that interrelate in complex ways, both supporting other claims/theories that are in tension with each other. \n\nThis level of granularity is crucial not just for finding relevant claims to inform the synthesis, but also for constructing more complex arguments and theories, by connecting statements in logical and discursive relationships. \n\nBeyond operating at the claim level, our researcher will also need to work through a range of **contextual details**. For example, to judge which studies, findings, or theories are most applicable to her setting, she needs to know key methodological details including the comparability of different studies' interventions, settings, populations, and outcome measures. She might need to reason over the fact that two studies that concluded limited efficacy of bans had ban interventions that were quite short, on a forum with no identity verification. Or she might reason through the fact that a prominent theory of bad faith and discourse was proposed by a philosopher from the early 2000's (before the rise of modern social media). To judge the validity of past findings (e.g., what has been established with sufficient certainty, where the frontier might be), she would need to know, for example, which findings came from which measures (e.g., self-report, behavioral measures), and the extent to which findings have been replicated cross authors from different labs, and across a variety of settings (e.g., year, platform, scale).\n\n### Hypothesized individual benefits: Creative synthesis and exploration\n\nA discourse graph as a data structure has key affordances that are hypothesized to enable just these sorts of synthesis operations. Information is represented primarily at the claim or statement level, and embedded in a graph of relationships with other claims and context. In a discourse graph, claims have many-to-many relationships to support composition of more complex arguments and theories, or \"decompression\" into component supporting/opposing claims. Contextual entities and information, such as methodological details and metadata, are explicitly included in the discourse graph. This supports direct analysis of claims with their evidentiary context, supporting critical engagement, integration, and even reinterpretation of individual findings. The following figure shows how this might be supported in the specific worked example above. Note that discourse graphs need not be represented or manipulated in this visual format; the underlying graph model can be instantiated in a variety of media, such as hypertext notebooks, and also implicitly in various analog implementations that allow for cross-referencing. What is important is the information architecture of representing networks of claims and their context.\n\n![[Fig - Discourse graph example for effects of bans on online antisocial behavior.png]]\n\nBeyond the theoretical match between the kinds of queries scientists need to run over their evidence collection for synthesis, a discourse-centric representation that encodes granular claims instead of document \"buckets\" could facilitate exploration and conceptual combination. There is theoretical precedent for this in research on expertise and creative problem solving, where breaking complex ideas down into more meaningful, smaller conceptual \"chunks\" may be necessary for creative recombination into new conceptual wholes ([[R- Achieving Both Creativity and Rationale]], [[R- The minds eye in chess]] [[R- Constraint relaxation and chunk decomposition in insight problem solving]], [[R- Innovation Relies on the Obscure]]). Removing contextual details (though not losing the ability to recover them) may also be necessary and useful for synthesizing ideas and reusing knowledge across boundaries ([[R- Institutional Ecology Translations and Boundary Objects]], [[R- Ambiguity and Engagement]]). \n\nAt the same time, constructive and creative engagement with contextual details, is thought to be necessary for developing novel conceptual wholes from \"data\", such as in sensemaking ([[R- The Cost Structure of Sensemaking]]), systematic reviews ([[R- Collaborative information synthesis I]]), or formal theory development [[R- Theoretical musings]], [[R- Theory Before the Test]], [[R- Are theoretical results Results]], [[R- Darwin on man A psychological study of scientific creativity]]). This is a more specific application of the general insight that [[C- Context is necessary for knowledge reuse]]. Further, accurately predicting just which contextual details are necessary to represent directly in an information object is a difficult task ([[R- Organizational Memory as Objects Processes and Trajectories]], [[R- Beyond Boundary Objects]]) that may be functionally impossible in creative settings.\n\nThe conjunction of these affordances","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Effective-individual-synthesis-systems-seem-to-mostly-exist-for-a-select-few":{"title":"C- Effective individual synthesis systems (seem to mostly) exist (for a select few)","content":"Authored By:: [[P- Joel Chan]], [[P- Rob Haisfield]]\n\nReferences bricolage, using a slipbox, synthetic notes, framework of qualitative analysis to literature reviewing.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Effective-synthesis-is-necessary-for-innovation-and-scientific-progress":{"title":"C- Effective synthesis is necessary for innovation and scientific progress","content":"Authored By:: [[P- Joel Chan]]\n\nThe advanced understanding from an effective synthesis can be a powerful force multiplier for choosing effective studies and operationalizations ([[R- Theory Before the Test]], [[R- Replication Communication and the Population Dynamics of Scientific Discovery]], ,[[R- Why Hypothesis Testers Should Spend Less Time Testing Hypotheses]]), and may be especially necessary for problems where it is difficult or impossible to construct decisive experimental tests. The issue of mask efficacy for reducing community transmission is a powerful example of this; as [[R- Face Masks Against COVID-19]] put it, \n\n\u003e \"The standard RCT paradigm is well-suited to medical interventions in which a treatment has a measurable effect at the individual level and furthermore, interventions and their outcomes are independent across persons comprising a target population. By contrast, the effect of masks on a pandemic is a population-level outcome where individual-level interventions have an aggregate effect on their community as a system. Consider, for instance, the impact of source control ‚Äî its effect occurs to other individuals in the population, not the individual who implements the intervention by wearing a mask...Even then, ethical issues prevent the availability of an unmasked control arm (27). The lack of direct causal identifiability requires a more integrative systems view of efficacy. We need to consider first principles ‚Äî transmission properties of the disease, controlled biophysical characterizations alongside observational data, partially informative RCTs (primarily with respect to PPE), natural experiments (28), and policy implementation considerations ‚Äî **a discursive synthesis of interdisciplinary lines of evidence which are disparate by necessity**.\" (p. 3, emphasis ours)\n\nTo illustrate the power of synthesis for accelerating scientific progress, consider the example of Esther Duflo, who attributed her Nobel-Prize-winning work to the detailed synthesis of problems in developmental economics she obtained from a handbook chapter [[R- How to Find the Right Questions]]. Indeed, scientific progress may not even be tractable without adequate synthesis (as theory), even with advanced methods and data [[R- Could a Neuroscientist Understand a Microprocessor]]: as Allen Newell famously said, \"You can't play twenty questions with nature and win\" [[R- newellYouCanPlay1973]].","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-End-user-programming-enables-people-to-bulk-process-notes":{"title":"C- End user programming enables people to bulk process notes","content":"Authored By:: [[P- Rob Haisfield]]\n\nBulk processing is basically what computation was made for! We can see promising directions with [[Q- How might we apply map filter reduce to notes and what other primitives are relevant to this domain|map, filter, and reduce]].\n\nWith respect to [[refactoring tools]], I want to be able to bulk type / categorize notes in hindsight. Through the [[Jump]] model, you would [[C- Selection is a core primitive for Jump|select through search and manual addition and subtraction]], then apply some refactoring to all of them.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-End-user-scripting-enables-creative-workarounds":{"title":"C- End-user scripting enables creative workarounds","content":"Authored By:: [[P- Rob Haisfield]]\n\n[User skill level increases over time](https://robhaisfield.com/notes/user-skill-level-increases-over-time), and people with high User Involvement understand your app‚Äôs core mechanisms so well that, when they face a new problem, they are able to come up with creative workarounds by rubber-banding multiple actions together. It's not uncommon for a new user to request a feature, and then have a more experienced user to mention that their request is already possible if they do X, Y, and Z things together, but the best the experienced user can do is recommend that sequence of steps. ^nigfm59\n\nIt‚Äôs probably not uncommon for your users to have series of behaviors that they repeat frequently. [Joel Chan](https://twitter.com/JoelChan86), when writing in Roam, often writes both a block reference and a reference to the page the block was on in the same bullet. [Maxim Leyzerovich](https://twitter.com/round) often creates a ‚ÄúTable of Contents‚Äù for himself in Figma, where he turns a frame into a component, duplicates it, drags it over to his ToC location, and then shrinks it. I like to copy a link to a frame in Figma and place it as hyperlinked text elsewhere to create ‚Äúportals‚Äù around my Figma files.\n\nAdvanced functionalities can be pieced together from sequences of less advanced functionalities, but sometimes there are so many steps that it's not worth the effort! What if it was easy for users to collapse those sequences of actions into just one action that they could call at any point? The ability to script these actions together and call that script would be an act of effort-saving kindness.\n\n### Some possible UX mechanisms for enabling this:\n\nWhat if the user could ‚Äúrecord‚Äù their actions, and when they stopped the recording, it created a text script that just shows the commands you ran in a sequence? The user could edit it to their liking and save it with their own title, creating a new action that they could call at any point.\n\nWhat if you didn‚Äôt have to decide to record ahead of time? What if you could generate a script at any point from looking at your commands from X seconds back?\n\n![[CmdK-Superhuman.gif]]\n\nAlternatively, any app with a command palette like VS Code, Superhuman with their infamous Command+K, or Sketch with Sketch Runner, has a straightforward path to scriptability. These apps let you search for any action that is possible in the application by name to run it from there rather than having to move your mouse around.\n\nWhat if, any time you ran a command in the palette, you had an option to paste that command into a script? If you perform a sequence of commands, you would then be able to generate a script on the fly.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Highlighted-and-lowlighted-search-results-map-to-how-well-results-map-to-intentions":{"title":"C- Highlighted and lowlighted search results map to how well results map to intentions","content":"Authored By:: [[P- Rob Haisfield]]\n\nWhat if the choice architecture for interacting with search results allowed you to indicate the strength of the links and how well it maps to your intended outcome? Maybe upvoting and downvoting results. Or collapsing, or clicking. [[C- User behavior within a well-designed choice architecture can be a signal of preferences]] This would allow people to weight connections.\n\nIf [[C- Search terms express intentions]], then highlighted and lowlighted results show how well the search matches the intention. [[Knovigator]] allows people to use quadratic voting on each block in order to indicate how important or relevant it is.\n\nLook at this search. A good amount of the results are irrelevant to my current query. I should be able to remove results and move them to the top.\n![[Pasted image 20211203210050.png]] ^940gp0g","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Hypertext-enables-communication-with-high-information-density":{"title":"C- Hypertext enables communication with high information density","content":"Authored By:: \n\n[[C- Compression is necessary for synthesis]] and hypertext facilitates compression.\n\nAndy Matuschak's working notes, like a wiki, use hypertext to communicate in an information dense way. This facilitates easy navigation where people are able to find what they are looking for [even when they don't quite know how to express](https://twitter.com/RobertHaisfield/status/1265306759356223493?s=20) it.\n\nAs Andy [likes to say in \"Evergreen Note Titles are like APIs\"](https://notes.andymatuschak.org/Evergreen_note_titles_are_like_APIs): [[((94z1iNd0D|*]]))\n\t- \u003e When [Evergreen notes](https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C) are factored and titled well, those titles become an abstraction for the note itself. The entire note‚Äôs ideas can then be referenced using that handle (see [Concept handles, after Alexander](https://notes.andymatuschak.org/z5vA4vw86DKNq22xt6pRWhumeRmSzwV6hxRHE)). In fact, this property itself functions as a kind of litmus: as you develops ideas in notes over time and improve the ‚ÄúAPIs,‚Äù you‚Äôll be able to write individual notes which abstract over increasingly large subtrees (e.g. [Enacted experiences have incredible potential as a mass medium](https://notes.andymatuschak.org/z6oXuXLZ7Wq1eBqskyfph2wz9gjohQUKSBFzx), [Evergreen note-writing as fundamental unit of knowledge work](https://notes.andymatuschak.org/z3SjnvsB5aR2ddsycyXofbYR7fCxo7RmKW2be)). ^ee42bf\n\nWhen the title of the note is able to subsitute for the whole idea, it compresses a large amount of knowledge into a sentence, allowing knowledge workers to create a shorthand supported by autocomplete wikilinks. Through bidirectional linking, those wikilinks also create a collection of relevant material. [[((YnjoPGwZt|*]]))\n\nHypertext structured in this manner is excellent for exploratory search. When people read a page they do not fully understand, hyperlinks will take them to the pages that explain component concepts, recursively, until they have learned what they need to know to grasp the original page. This style of search is efficient, because if people already understand a concept, they do not need to pursue the links further.\n\nWhen you have read much of a person's work in a well structured hypertext notebook, you can build a rich mental model of their thinking. I've read so much by [[P- Tom Critchlow.md]] that, when I read a 6 tweet long twitter thread, I am able to connect it to his [bigger worldview](https://twitter.com/RobertHaisfield/status/1418236841275183111) and even simulate conversations with him. This is because hypertext writing is information dense and refers to sets of ideas in consistent ways. Given that our goal is to combine knowledge at a large scale, information density is crucial.\n\nIf a key challenge of decentralized synthesis is bringing people up to speed, then hypertext is a promising direction.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Incrementally-processing-notes-is-a-key-user-behavior-to-promote-synthesis":{"title":"C- Incrementally processing notes is a key user behavior to promote synthesis","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\nThis claim is a response to [[Q- What workflows and behaviors facilitate synthesis]].\n\nThe thought behind this claim is that [[C- People are lazy]] and needing to process 6 months worth of research at once is more difficult than processing 1 month worth of information 6 times. As we use it here, the word processing refers to the act of going through old information and sorting it, either into new groups, by importance, or by stage in some pipeline. [[Q- What friction underlies the act of processing notes]]? \n\n[[C- Synthesis is supported by Active Reading]], and one method of active reading is the act of [progressive summarization](https://fortelabs.co/blog/progressive-summarization-a-practical-technique-for-designing-discoverable-notes/) (as coined by [[P- Tiago Forte]]). \n\nTools like [[Readwise|Readwise]], [[LiquidText]], and [[Hypothesis]] promote this act within their via annotations, highlighting, and focused views to gradually process notes. This is an area where [[C- It will be important to capture the potential energy of information consumption]], as other individuals can help process notes while they are reading.\n\nTools alone do not enable incremental processing, though. This has led the PKM community to reference routines and [algorithms for thought](https://www.cortexfutura.com/getting-started-algorithms-of-thought/) in order to turn ideas into synthesized knowledge. [[C- Multiplicity is necessary for synthesis]].\n\n%% [[Todos for Rob]] connect this to Joel's page on incremental formalization by saying that incremental processing is the first step along the way to  %%\n\n%% [[Todos for Rob]] talk about prioritization through [[People need a way of promoting and demoting knowledge in a decentralized knowledge graph]] %%\n\nMany people will [[C- Apply progressive summarization to your own notes|progressively summarize their own notes]]. [[C- People process complex information in multiple levels and stages of processing]].","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-It-will-be-important-to-capture-the-potential-energy-of-information-consumption":{"title":"C- It will be important to capture the potential energy of information consumption","content":"Authored By:: [[P- Rob Haisfield]]\n\n#pipeline/develop \n\n[[Q- How do people tacitly annotate information]]? [[C- People are lazy]], so if we can really leverage tacit annotation by enriching the choice architecture with options that add value, then we can perhaps fill in metadata and generate discourse. This could be interpreted as a response to the question: [[Q- How do we increase the frequency of social tagging behaviors]]. These people can verify information, agree with it, disagree, and connect it to other information. **We must leverage this- imagine if [[Readwise|Readwise]] was ubiquitous, people more frequently commented and tagged information, and people could reply to each other?**\n\n[[Q- What community roles are necessary in a decentralized knowledge graph]]? [[C- Most people will primarily consume information 1]], so they need something valuable to do. That valuable thing could be commenting on claims and building up RDF relationships between granular parts of the content on the page and other stuff. Social tagging, or social relationship description.\n\nWe want to capture the potential energy of information consumption because of problems associated with the question: [[Q- How can people maintain a decentralized discourse graph with a high quantity of information in it]]. It will be crucial to be able to improve the signal to noise ratio.\n\nPerhaps people annotating information could put stake behind their annotations and get rewarded if others believe their annotations to be valuable.\n\n[[C- Incrementally processing notes is a key user behavior to promote synthesis]], and capturing the potential energy latent in people's annotations will be crucial.\n\n[[C- People need a way of promoting and demoting knowledge in a decentralized knowledge graph]]. Specific sets of emoji reactions could facilitate this, as could [quadratic voting](https://twitter.com/metamitya/status/1248768114768084994?s=20) as implemented in [[Knovigator]]! If we can harness people's ability to react with commentary and allow that commentary to carry metadata, then the many eyes on it will result in highly queryable and malleable data structure. If it is structured in a way that's abstract enough to be recursive (e.g \"It's turtles all the way down\"), then that enhances composability. %%[[I- I wish I could freely add metadata to each block, so I could drag a slider indicating a belief score]]%%\n\nThe claims made in this page are different from [[C- There is a wealth of creative exhaust generated by researchers that is going to waste]] primarily in the sense that creative exhaust refers to content that is created that does not make it to publishing. In the titular page, we are making the claim that there is exhaust to capture from consumption as well.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Linked-references-are-a-smart-default-for-related-items":{"title":"C- Linked references are a smart default for related items","content":"Authored By:: [[P- Rob Haisfield]]\n\n- Assuming you're not using aliases, a plain text search in [Obsidian](Obsidian.md) for `\"[page](page)\"` within quotations is functionally indistinguishable from the backlinks for that page. Linked references can then be thought of as a search for related items, where all the app knows is that backlinks have a high likelihood of being related because the user explicitly linked the items together.\n- Unlinked references can be thought of as a search for `\"page\" -\"[page](page)`. These have a lower likelihood of relatedness, as the connections were not explicitly made by the author while writing, but may represent latent connections in imported text or [quick capture](quick%20capture) thoughts. Linking unlinked references is tool for [structure in hindsight](../LitReview/structure%20in%20hindsight.md)\n- If we [I- Populate the related items section through a search term](I-%20Populate%20the%20related%20items%20section%20through%20a%20search%20term.md), there needs to be a smart default term, as requiring the user to manually specify a search to represent related items for each page would be too much work. As wikilink matches are high signal, `[page](page)` should be the default term. That will often be enough. However, if it isn't, the user should be able to adjust the search term to more accurately express what they consider to be related.\n- [P- Gordon Brander](P-%20Gordon%20Brander.md) made a similar point, taking inspiration from [Notational Velocity](Notational%20Velocity.md). As he phrases it in [Search reveals useful dimensions in latent idea space](https://subconscious.substack.com/p/search-reveals-useful-dimensions):\n- \u003e **Any sufficiently advanced search is indistinguishable from a hyperlink**. A search query is kind of like a hyperlink that can be constructed on the fly. Our question forges a link between notes, just-in-time. When a search becomes extremely specific, it functions like a coordinate to a specific point in latent idea space.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Linked-references-are-a-smart-default-for-related-items-1":{"title":"C- Linked references are a smart default for related items 1","content":"Authored By:: [[P- Rob Haisfield]]\n\nI've tweeted about this before.\n\n[When you think about it](https://twitter.com/RobertHaisfield/status/1379128190409449472), the backlinks to` [[page]]` being a search for `\"[[page]]\"` essentially represents a smart default for what is related to that page within your vault. I want to break those defaults and further define what counts as a \"backlink\" via a well-formed search term!\n\nThis point was also made by [[P- Gordon Brander]], taking inspiration from [[Notational Velocity]]. As he phrases it in [Search reveals useful dimensions in latent idea space](https://subconscious.substack.com/p/search-reveals-useful-dimensions):\n\n\u003e **Any sufficiently advanced search is indistinguishable from a hyperlink**. A search query is kind of like a hyperlink that can be constructed on the fly. Our question forges a link between notes, just-in-time. When a search becomes extremely specific, it functions like a coordinate to a specific point in latent idea space.\n\nTreating searches as though they are backlinks is a really powerful idea. That means you can make more precise searches as a way of filtering it down. Also makes me want to alter the search for backlinks to define it more to my liking.\n\nI remember how my mind was blown when I first saw [[P- Allen Wilsonn]] link a tweet [to a search](https://twitter.com/AGWilsonn/status/1265760007414579206). This was just an early example of a powerful new behavior.\n\n![[Pasted image 20210916173736.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Making-editors-identifiable-incentivizes-high-quality-reviews":{"title":"C- Making editors identifiable incentivizes high quality reviews","content":"Authored By:: [[P- Brendan Langen]]\n\nIn [[R- Science as Pull Requests]], [[P- Cortex Futura]] paints a picture of an open source, engineering-focused academic review process of the future. \n\nPart of our challenge is solving, [[Q- How can people maintain a decentralized discourse graph with a high quantity of information in it]]? \n\nBy allowing [[C- Anonymous contributions to a decentralized discourse graph enable balanced review]], we enable for reviews to be unbiased. However, because we want our information to be valid, we also need to answer, [[Q- How can we incentivize generative contributions to a decentralized discourse graph]]? [[C- Curation is an important role in maintaining a decentralized discourse graph]], and staking rewards for editing is a step to ensuring high quality. \n\n(Rough idea here) [[I- Incentivize high quality review through token distribution]].\n\nImagine if editors received a token for their peer-reviewed contributions. [[Q- What would a Web3 Wikipedia look like]]. In a way, we are applying the same principles as Audius. [[C- The incentives of Audius explicitly value curation]]\n\n[[Q- How do we increase the frequency of social review]]?","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Many-products-are-simply-specialized-interfaces-on-top-of-Excel":{"title":"C- Many products are simply specialized interfaces on top of Excel","content":"Authored By:: \n\u003e 1.  **The Unbundling of Excel**. Hundreds of B2B startups have been built by taking a job currently being done in Excel and trying to accomplish the job in more optimized, purpose-built B2B software. Every time you hear an entrepreneur say, ‚ÄúWe‚Äôre replacing siloed spreadsheets and outdated processes with purpose-built software,‚Äù you‚Äôre hearing the Unbundling of Excel in real time. Many popular SaaS applications fall in this category. And yet, despite being ‚Äúunbundled,‚Äù Excel keeps getting stronger. [[R- Excel never dies]]\n\nThink about all of the CRM or task management applications that are glorified spreadsheets.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Most-people-will-primarily-consume-information":{"title":"C- Most people will primarily consume information","content":"Authored By:: [[P- Brendan Langen]], [[P- Rob Haisfield]]\n\nStatistics over the years cite a [90-9-1](https://news.ycombinator.com/item?id=22622574) rule to contributors in online communities, and although that does not hold up across all communities, the majority of people fall into the consumption-only group (90%). Most site data is not publicly shared, but estimates range from 80-98% of people as lurkers, 1.9%-19% of people as editing/updating content, and .1-1% of people as primary contributors. \n\nLooked at differently, the 90-9-1 rule also indicates the breakdown of contributions from users. In this group, 90% of posts come from 1% of users, 10% of posts come from 9% of users, while no posts come from 90% of users. Our closest public comparison to a discourse graph is Wikipedia. [In 2006, 99.8%](https://www.nngroup.com/articles/participation-inequality/) of visitors were lurkers, 0.2% edited pages, and only .003% were contributors.\n\nThis speaks to a large gap in the activity we want to see in a discourse graph. [[C- It will be important to capture the potential energy of information consumption|It will be important to capture the potential energy of information consumption]]. Additionally, we need to [[Q- What workflows and behaviors facilitate synthesis|enable workflows and behaviors to facilitate synthesis]]. How can you lower the barriers for someone to meaningfully contribute?\n\n[[C- Synthesis is supported by Active Reading|Synthesis is supported by active reading]], and a number of tools assist with this. \n\n[[LiquidText]] is built on the claim that systems must enable people to trace excerpts back to their original context to support active reading, because [[C- Knowledge must be recontextualized to be usefully reused|knowledge must be recontextualized to be usefully reused]]. The tool allows you to \"pull out\" excerpts and make pointers to context, and use these units on a canvas to weave together a larger understanding, albeit in a less formal fashion.\n\n[[Hypothesis]] allows users to annotate webpages and documents in their margins, providing the option to further enrich a snippet with context. Sharing is built in to Hypothes.is, affording added context and active reading across groups. This enables social tagging, which helps users find related content and build community. [[C- Social tagging is a key user behavior to managing a decentralized knowledge graph|Social tagging is a key user behavior to managing a decentralized knowledge graph]]. This can come in the form of text, likes or [[C- Emoji reactions are a form of social tagging|emoji reactions]]. \n\n[[Readwise|Readwise]] offers a view towards actions a reader can take to save important notes and passages without considerable effort. \n[[P- Tiago Forte]] famously coined the term [\"progressive summarization,\"](https://fortelabs.co/blog/progressive-summarization-a-practical-technique-for-designing-discoverable-notes/) which is the behavior we are looking to develop in discourse graph communities - [[Extended Universe/C- Incrementally processing notes is a key user behavior to promote synthesis|incrementally processing notes is a key user behavior to promote synthesis]]. Progressive summarization refers to consuming an information resource, taking the important parts out of it, rereading the important parts at a later date, summarizing the most important parts of that, and so on, until you only have the most important content.\n\nHow can we incentivize users to contribute? \nPerhaps [[C- Anonymous contributions to a decentralized discourse graph enable balanced review|anonymous author contributions]] combined with [[C- Making editors identifiable incentivizes high quality reviews|identifiable editors]] can increase the volume and quality of reviews while reducing bias. A helpful proxy to ask ourselves is [[Q- What would a Web3 Wikipedia look like|what would a Web3 Wikipedia look like]]?\n\n[[Q- How can people maintain a decentralized discourse graph with a high quantity of information in it|Our goal is to enable people to maintain a decentralized discourse graph with a high quantity of information as it grows over time]].","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Newsfeed-management-can-enable-users-to-express-their-preferences-through-a-combination-of-revealed-preferences-and-declared-preferences":{"title":"C- Newsfeed management can enable users to express their preferences through a combination of revealed preferences and declared preferences","content":"Authored By:: [[P- Rob Haisfield]]\n\n[[C- Newsfeeds are an intervention to distribute an infinite quantity of recent information]]\n\nUsually, social media newsfeeds use your revealed preferences to construct an algorithm that will keep you looking for longer. It might do this by looking at what you like and comment on, or by what you look at for extended periods of time. However, by solely interpreting revealed preferences, you can end up with noisy algorithms or showing the user information that isn't in their interests. For example, I may look at a tweetstorm that enrages me, but I don't want to see more of that. Or I might click on a trending topic to realize what it's about but then realize that it's not of interest, but the algorithm just knows I clicked on it. My behavioral signal is being misinterpreted.\n\nIdeally, there is some way to also express declared preferences. For example, as I'm going through a newsfeed, I can click on a tweet and say \"see less like this.\" Or I can use the tools that the algorithm has for revealing my preferences intentionally.  [[C- User behavior within a well-designed choice architecture can be a signal of preferences]].\n\nFor more on this subject, see [here](https://www.linkedin.com/pulse/how-do-you-make-users-happy-behavior-what-social-media-rob-haisfield/?trackingId=GdEOMIOmOS6w%2BpM8rfBnTg%3D%3D)","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Newsfeeds-are-a-poor-intervention-for-distributing-and-discovering-relevant-information":{"title":"C- Newsfeeds are a poor intervention for distributing and discovering relevant information","content":"Authored By:: [[P- Rob Haisfield]]\n\n[[Q- What are powerful interfaces for entering information into a discourse graph]]\n\nNewsfeeds are an intervention for displaying a never ending stream of information to social media users. \n\nNewsfeeds show you primarily what is new, which is not ideal when considering a discourse graph to facilitate synthesis. We want people to be able to bring together information from the past and surface it precisely when it is relevant.\n\nIn their attempt to show you only what's relevant to your interests, newsfeeds generally overindex their algorithms on revealed preferences. They show you more of what you pay attention to, but this may not always reflect people's true intentions for what they want to consume, especially for their stated research goals. There are meaningful directions to explore in creating [a better choice architecture for newsfeed management](https://twitter.com/RobertHaisfield/status/1329828499167711232).","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-People-are-lazy":{"title":"C- People are lazy","content":"Authored By:: [[P- Rob Haisfield]]\n\nCitation:: [[R- Metacrap- Putting the torch to seven straw-men of the meta-utopia]]\n\n[[C- The worst data structure for a collaborative decentralized knowledge graph would be individual people tagging things according to a preset ontology]]\n\nIf a system is reliant on each person tagging things appropriately, then it is brittle. Crowdsourcing may be a solution: [[C- Social tagging is a key user behavior to managing a decentralized knowledge graph]].\n\n![[R- Metacrap- Putting the torch to seven straw-men of the meta-utopia#2 2 People are lazy]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-People-process-complex-information-in-multiple-levels-and-stages-of-processing":{"title":"C- People process complex information in multiple levels and stages of processing","content":"Authored By:: [[P- Joel Chan]]\n\n\n- When we're exposed to new information, we have to ask questions and learn more before we feel confident in our understanding. Knowledge evolves over time, and we adapt our thoughts as we see other perspectives. This is the [sensemaking](sensemaking.md) process. This is our introduction to something new, and we know the least we ever will about the topic at this time. \n- Similarly, in the moment a note is created, it is very difficult to know where it __belongs__. We may not yet have a name for what we're seeing or know how it relates to another insight. Our understanding will likely evolve after reading other sources. On later review, we may even find a unique detail of the wider point to be the most interesting. It's hard to know everything up front! \n- [C- Sensemaking requires iterative loops of (re)interpreting data in light of evolving schemas](C-%20Sensemaking%20requires%20iterative%20loops%20of%20(re)interpreting%20data%20in%20light%20of%20evolving%20schemas). The primary models that represent this process are the [Learning Loop Complex](Learning%20Loop%20Complex.md) and the [Notional Model of Sensemaking](Notional%20Model%20of%20Sensemaking.md), which loops between and within foraging and sensemaking loops, progressively increasing in structure and effort, starting from raw data sources and culminating in a synthesized set of hypotheses. \n- In our interviews, we saw multiple people talk about their process of [conversations, chats with others](conversations,%20chats%20with%20others) to crystallize new information, like [R16](R16) in their synthesis process. Sometimes this can be a frame, or a prompt, that the person presented to themselves, like [R10](R10) writing multiple versions in order to speak fluently about the topic. \n- This all speaks to the need to treat notes as a work in progress. Notes aren't in their final form when first written; they evolve, often far beyond the stub they began as. Translating to tool design, [C- There needs to be an excellent workflow for refactoring in a tool for thought](C-%20There%20needs%20to%20be%20an%20excellent%20workflow%20for%20refactoring%20in%20a%20tool%20for%20thought) to enable [incremental formalization](incremental%20formalization.md).\n- In the scope of a [Thought processor](Thought%20processor), we see different approaches. [Roam](Roam) encourages users to write directly into a daily notes page, linking to pages as they write. This contrasted conventional practice in tools like Evernote that ask the user to name the page and place it in a folder up front. Zettelkasten systems, which are agnostic to a specific tool, ask users to create a note without names and later fit it in next to similar notes.\n- In the process of synthesis, we often write a number of notes about an idea - some useful, some not. We know that [C- Multiplicity is necessary for synthesis](C-%20Multiplicity%20is%20necessary%20for%20synthesis), and this writing process helps, but it creates a huge amount of noise for us to later search through. We have a need for Archiving.\n- Forgetting is powerful. If something is no longer important, its presence in your memory is a burden, turning your \"search results\" into a noisy mess that decreases your likelihood of finding the right answer.\n- Many people use personal knowledge management software to augment their memories. \"Your mind is for having ideas, not holding them\" as stated in the infamous productivity text \"Getting Things Done.\" We saw this again and again in our interviews. Expert synthesizers use thought processors to ensure good ideas don't fall through the cracks. Personally, I use thought processors in conjunction with personal knowledge management in order to ensure the lessons I learn today retain their usefulness in 10 years. If at that point my questions and ideas are dependent on recent memory rather than a decade of learning, I've failed.\n- However, over the course of 1 year using Obsidian, I wrote more than a million words. Maybe 30% of that was from educational materials. The rest was \"thinking out loud\" in order to process thoughts. Eventually, many of those thoughts would be processed into an information artifact. Those artifacts became my canonical point of reference. [*](((oYOFV-9b_)))\n- While this multiplicity is generally useful during the process of thinking through an issue, later down the line reviewing it contributes to the feeling of [wasted repeated effort](wasted%20repeated%20effort). Early versions of information in the final artifact can likely be forgotten without much negative consequence.[*](((ULqBmEu14)))\n- Additionally, over the course of a decade, I'll certainly update my beliefs and mental models. If that happens, I'll have to ask myself, \"Is it important to keep a record of my beliefs at that point in time, or is leaving it in my database weighing it down?\"\n- I don't know how software can automatically archive this information without making users mad at some point or another. This is a hard problem, but it should be clear that [C- Bulk refactors are a necessary primitive to maintaining a decentralized discourse graph](../LitReview/Extended%20Universe/WIP/C-%20Bulk%20refactors%20are%20a%20necessary%20primitive%20to%20maintaining%20a%20decentralized%20discourse%20graph.md).\n- At the extreme end, Venkatesh Rao jokingly referred to an archetype of user as [\"mind-palace pack rats\"](https://twitter.com/vgr/status/1370583027512872961). These are the people who don't know how to delete information and want to either memorize or save all information they encounter. I occasionally fall into this trap. [C- Predicting trajectories of future reuse of information objects is hard](C-%20Predicting%20trajectories%20of%20future%20reuse%20of%20information%20objects%20is%20hard), and information hoarders may believe that everything will be reused at some point. Additionally, they may believe that it's better to have information and not need it than need it and not have it.\n- Whether or not either of these beliefs turn out to be true, the hoarders will produce a massive amount of information over the course of 10 years. \n- If the first belief is false and they never delete or archive information, then this means they will have too much information to search through in 10 years, turning their personal database into a noisy mess with far too much to sift through for efficient reuse. Whether or not the second belief is true, it must be weighed against the immense cost of bloating your knowledge graph.\n- The problem is that over the course of 10 years, I'll generate so much content that many of it will simply appear to be noise. Not everything you believe to be important today will be important then. Most likely, you will only want the most important artifacts due to time constraints.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Search-terms-express-intentions":{"title":"C- Search terms express intentions","content":"Authored By:: [[P- Rob Haisfield]]\n\nThis is a big claim in [[R- Everybody Lies]], and is how the author justifies using google search data in order to understand people better.\n\nWhen users have advanced search options, they are able to specify what they mean. Perhaps when they are searching for PCT, they really mean they are searching for perceptual control theory. A search with an OR clause could communicate that (e.g. `OR: \"PCT\" \"Perecptual Control Theory\"`. Then if those searches maintain their permanence, the system could know that I always mean perceptual control theory in that situation. [[C- Tools for thought are popular when it feels like they get to know you better over time]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Synthesis-as-a-process-is-usefully-modeled-as-a-specialized-form-of-sensemaking":{"title":"C- Synthesis as a process is usefully modeled as a specialized form of sensemaking","content":"Authored By:: [[P- Joel Chan]]\n\nWhile the most common manifestation of synthesis is an academic literature review, the underlying cognitive processes are not so different from what people do all the time: **[[sensemaking]]**. \n\nSensemaking as a model of a core cognitive process has a long history in cognitive and information science. We draw specifically on a family of models that describe sensemaking as an iterative search for representations of input data that can make some task easier ([[R- Towards a comprehensive model of the cognitive process and mechanisms of individual sensemaking]], [[R- The Cost Structure of Sensemaking]], [[R- The sensemaking process and leverage points for analyst technology]]). Examples include categorization schemes and comparison tables to facilitate decision-making about what camera to buy, a map of hypotheses for intelligence analysts, and an effective literature review of an area of research.\n\nOne crucial insight from models of sensemaking informs our research on synthesis: sensemaking involves **iterative loops** between [[Search Behavior|searching]] (for data, useful representations) and analysis/composition (classifying data, composing data into representations). This is illustrated well in the following two figures from  following figure from Russell et al's [[Learning Loop Complex]] and Pirolli et al's [[Notional Model of Sensemaking]]:\n\n![[Fig - Learning Loop Complex.png]]\n![[Fig - Notional Model of Sensemaking.png]]\n\nOne implication of this insight are that [[content/garden/LitReview/I- Search as a part of the primitive design|search is a fundamental primitive of synthesis workflows]] because of the key involvement of search in this process model. Another implication is that [[C- Synthesis tools need to support incremental formalization]] to accomodate constant changes to the representation that are common with open-ended exploratory sensemaking like intelligence analysis (in contrast to well-trodden sensemaking tasks like deciding what camera to buy).\n\nWhile sensemaking is a reasonable general model of the kind of work that is needed to do synthesis, there are likely to be key differences between synthesis and sensemaking, and other everyday tasks of sensemaking, due to the nature of the inputs (complex research papers, theories, findings) and the nature of the output (a boundary-pushing novel conceptual whole with no obvious precedent). These differences are likely to be consequential for understanding precisely what data structures and user interactions can optimize sensemaking for synthesis, since the process and representational requirements of sensemaking (e.g., whether the representation that is constructed has the shape of a map or timeline or argument, how much iteration and search for representations must happen) vary as a function of the task. Thus, our project tackles core research questions about the [[Q- What workflows and behaviors facilitate synthesis | workflows]] and [[Rob/Q- What is the data structure of a graph built to facilitate decentralized knowledge synthesis | data structures]] that optimize synthesis, and how to build on this for decentralized synthesis. Some hypotheses include the importance of [[content/garden/LitReview/I- Search as a part of the primitive design|search as a primitive]], and the importance of design patterns like [[incremental formalization]] and [[flexible compression]].\n\nUnderstanding how people perform synthesis is one of our open questions going into [[Interview Guide|user interviews]]. #questions/core","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Synthesis-tools-need-to-support-incremental-formalization":{"title":"C- Synthesis tools need to support incremental formalization","content":"Authored By:: [[P- Joel Chan]]\n\nFormal structure unlocks the most sophisticated levels of synthesis we want, and is especially helpful for enabling computational systems to provide support (e.g., indexing, searching).\n\nUnfortunately, formal structure is also **very tedious** to specify, especially in the exploratory, open-ended domains where synthesis is most valuable. It's devilishly tricky to make systems that support formalism that users will actually use (without a gun to their head).\n\nTools for synthesis that attempt to incorporate formalism typically have an extremely high barrier to entry *and* ongoing burden on the user. This overhead is exceedingly difficult to overcome for any kind of ongoing work.\n\nThese problems are well-documented in the classic \"Formality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems\" [[R- Formality Considered Harmful]]. In brief, this paper identifies four classes of difficulties:\n1. **Cognitive overhead**: often the task of specifying formalism is extraneous to the primary task, or is just plain annoying to do\n2. **Tacit knowledge**: if relevant info for developing formalism is tacit, asking people to formalize it will interrupt the task, with serious consequences for the quality of the work\n3. **Enforcing Premature Structure**: people don't want to commit until they're sure what formalism is actually useful for their task (and what's extraneous and only annoying) ^wg1zd3e\n4.  **Situational Structure**: Useful structures and formalisms vary significantly across people, situations, and tasks\n\nThe last two (premature and situational structure) are particularly relevant for open-ended synthesis work.\n\nOne powerful general design pattern for overcoming these risks of formality is [[incremental formalization]]. The basic intuition is described well by [[R- Formality Considered Harmful]]: users enter information in a mostly informal fashion, and then incrementally formalize later in the task as appropriate formalisms become more clear and also (more) immediately useful. \n\n[[R- Formality Considered Harmful]] notes a few example systems that help flesh out the concept (these are all older systems, mostly research systems, so unfortunately they're not available to play with):\n    1.  In the Hyper-Object Substrate system, users enter mostly informal text initially, and the system recognizes patterns in the textual information to suggest possible formal attributes or relations for the underlying knowledge base, which the user can then accept/modify/reject as they wish (p. 347).\n    2.  Infoscope is a news reader system that suggests filters based on users' reading patterns; this helps them make their goals explicit which can facilitate formalization after it emerges from their task behaviors (p. 347-348)\n    3.  VIKI is a spatial hypertext system that includes heuristic algorithms to find recurring visual/spatial patterns in layout of objects; users can use these to specify schemas if they wish\n\nAnother more recent example comes from [[R- Gui ‚Äî Phooey]]: their Jourknow system includes a variety of features that can recognize formal structure (e.g., location, time, meeting information) from (relatively) unstructured notes in pidgin or more lightweight entry format, such as [[Notation3]] (p. 195-197)\n\nOther examples of this in production systems include Todoist recognizing keyphrases like \"today\" to add formal date information to todos, or Gmail recognizing potential formal event data from an email when you create a calendar event while an email is open.\n\nIncremental formalization addresses the cognitive overhead problem by spreading it throughout the task a bit more evenly, as well as removing it mostly from the earlier parts of the task, where minimal friction is needed to maximize exploration. It also helps with the premature and situational structure problems, since you don't have to commit early on to a structure that may not serve you well (or even hurt your performance) later on.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-The-responsibilities-required-to-produce-synthesis-can-be-split-up-among-many-people":{"title":"C- The responsibilities required to produce synthesis can be split up among many people","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\n[[Q- What synthesis behaviors must be done by an individual and what responsibilities can be distributed to many people]]?\n\n[[Q- What user behavior is required to grow a decentralized discourse graph|As a discourse graph grows]], the process of maintenance becomes more difficult. Synthesis also needs to occur in an ongoing manner. \n\nHere, we can call on prior art like [[Hypothesis]] [[LiquidText]] and [[Readwise|Readwise]] as examples of tools that enable [[C- Synthesis is supported by Active Reading|active reading]]. \n\n[[C- Social tagging is a key user behavior to managing a decentralized knowledge graph]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-User-behavior-within-a-well-designed-choice-architecture-can-be-a-signal-of-preferences":{"title":"C- User behavior within a well-designed choice architecture can be a signal of preferences","content":"","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/C-Wikum-allows-you-to-summarize-groups-of-comments-on-a-Hacker-News-style-forum":{"title":"C- Wikum allows you to summarize groups of comments on a Hacker News style forum","content":"Authored By:: [[P- Rob Haisfield]]\n\n[[Wikum|Wikum]] is a tool for recursive summarization in internet forums, with an aim to help readers see a summary tree of the main points of discussion. \n\nThis was first published by [[Amy Zhang]], [[Lea Verou]], and [[David Karger]] at CSCW 2017. \n\nThis paper has made significant traction in the para-academic HCI / tools for thought community. \n\nExample: [[P- Max Krieger]] in [[R- Chatting with Glue]] references [[Wikum|Wikum]], and this piece has made significant waves in this community outside of academic HCI (unclear to me how much impact Krieger's piece has had within academic HCI)\n\nSupports:: [[I- a primitive for composing pages to encapsulate meaning]]\n\n[[C- Retroactive funding incentivizes support because it's easier to agree on what was useful than what will be useful in the future]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Clarity":{"title":"Clarity","content":"Authored by:: [[P- Brendan Langen]]\n\nClarity is a shared workspace for remote teams. Clarity is pre-built with templates, workflows and project management structures that create an out-of-the-box productivity suite.\n\nIn the same way that [[C- Many products are simply specialized interfaces on top of Excel]]\n\nClarity uses [[Roam Research]]-like block referencing set in a freeform document environment. \n\nFounded by [[P- Richie Bonilla]]\n\nAssigning a task.\n![[Pasted image 20210918111022.png]]\nVisualizing the task assignment. \n![[Pasted image 20210918111207.png]]\nAssigned work in one place.\n![[Pasted image 20210918111321.png]]\nBlock-based transclusion. \n![[Pasted image 20210918111456.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Codex-OS":{"title":"Codex OS","content":"Authored by:: [[P- Rob Haisfield]]\n\n- #[[Twitter thread]] [[Robert Haisfield (Recently moved to Berkeley)]]: Yesterday I was given a demo of @codexeditor. Absolutely wacky, in all of the right ways. Everything is an entity on a graph that can have labeled relationships with other entities. The UX is basically creating a new desktop OS in your browser for managing all info on that graph. [*](https://twitter.com/RobertHaisfield/status/1326185315380310016)\n  - When I say everything can be an entity, I mean it... text, images, video, audio, websites. Iian is leaning into workspace model, allowing saved arrangements of what you have on the screen to revisit later. Those are also graph entities you can link to. https://twitter.com/RobertHaisfield/status/1267599197412286464?s=20 [*](https://twitter.com/RobertHaisfield/status/1326186101053140992)\n  - Whether it will see broad success or not, I have no idea. It's the sort of thing where you can only wrap your head around it so much without using it. It's insanely ambitious in doing a million things, so we'll see what people will actually do with it https://twitter.com/RobertHaisfield/status/1254554242183917568 [*](https://twitter.com/RobertHaisfield/status/1326187083736649730)\n  - But make no mistake - this is shaping out to be a professional research tool.\n    - Tired: @Superhuman of X\n    - Wired: @Photoshop of X\n    - The sort of thing where some knowledge workers simply accept the usage of this tool as a given for their job, and derive great pleasure in using it. [*](https://twitter.com/RobertHaisfield/status/1326187085296934912)\n  - Codex is rethinking so many core concepts to UX and data structure and operating systems in novel ways it's hard to keep up with. It's a powerful demo, but I'd have to play around with it myself to know if the ideas are actually good. Keep an eye on Codex! Beta upcoming. [*](https://twitter.com/RobertHaisfield/status/1326187977349869568)\n  - Regardless of its outcomes as a product, it will be a valuable research contribution to the tools for thought space. [*](https://twitter.com/RobertHaisfield/status/1326189522531491841)\n  - The last demo he showed me was in March. It's insane how much progress has been made both conceptually and technically in that time period. Just waiting to see what happens next when he opens it up to more users and is able to see what people do (or don't do) with the tools. [*](https://twitter.com/RobertHaisfield/status/1326190050124595201)\n  - I'd say my main concern has to do with how much user involvement is necessary in order for Codex to transform the user's effort into meaningful outcomes. I could annotate everything and name all of the relationships. Is it worthwhile to do that? https://robhaisfield.com/notes/user-involvement [*](https://twitter.com/RobertHaisfield/status/1326197127903506432)\n  - To that, Iian responded that when he releases the beta, one of the main things that he'll be looking out for is when things are more complicated than they need to be. If users are trying to do something cool that requires 5 steps, he'll ask how he could make it 2 or 3. [*](https://twitter.com/RobertHaisfield/status/1326197129950359552)\n  - Additionally, he raised the concept of \"Tacit annotation.\" Effortful annotation is powerful, but you could annotate such that \"it just happens\" as you go. He wants both to be valuable. This is a solid approach! Low floor, wide walls, high ceiling. http://gordonbrander.com/pattern/low-floor-wide-walls-high-ceiling/ [*](https://twitter.com/RobertHaisfield/status/1326197133985288194)\n  - Codex could become an absolute power tool for qualitative researchers https://twitter.com/RobertHaisfield/status/1383434842696683523 [*](https://twitter.com/RobertHaisfield/status/1383443781752549379)","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/DEVONThink":{"title":"DEVONThink","content":"Authored by:: [[P- Brendan Langen]]\n\nDEVONthink is a networked tool for thought on Mac that allows users to collect and organize their documents while affording annotation across any document type. An interesting affordance is an automated categorization system that is trained by past user behavior.   \n\n\u003e DEVONthink keeps all your documents in easy-to-backup databases and presents them to you in a variety of ways. Many documents can be viewed and edited without opening them in another application. Read web pages as if they were local documents.\n\u003e [DEVONthink Pro](https://www.devontechnologies.com/apps/devonthink/editions) scans paper documents and makes them searchable, imports email, and even downloads complete web sites.\n![[Pasted image 20210916165512.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/DSL":{"title":"DSL","content":"Authored by:: [[P- Brendan Langen]]\n\nA domain-specific language, or (DSL), is defined by [Wikipedia](https://en.wikipedia.org/wiki/Domain-specific_language) as such: \"A domain-specific language (DSL) is a computer language specialized to a particular application domain.\" \n\nThrough a DSL for decentralized discourse graphs, we would enable people to communicate information in a machine/human readable way. This enables [[end-user programming]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Dendron":{"title":"Dendron","content":"Authored by:: [[P- Brendan Langen]]\n\nDendron is a networked hypertext tool for thought with a local-first, flexible hierarchy. \n\n\u003e Dendron finds the usable center between unstructured backlinks and rigid file hierarchies. We help users maintain a canonical hierarchy for every note while also allowing for arbitrary backlinks to any other note.\n\nThis flexible data hierarchy aims to solve the growing problem of digital notebooks. \n\nFounded by [[P- Kevin Lin]]\n\n![[Pasted image 20210916145843.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/EDN":{"title":"EDN","content":"Authored by:: [[P- Brendan Langen]]\n\nExtensible Data Notation (EDN) is a subset of the syntax in Clojure, similar to JSON. This allows for richer backend data structures alongside Datomic, and represents the data structures as text. \n\nEDN is extensible, which neither JSON or YAML can say. This enables text to act as functions to transform the data, similar to a map function.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Elicit":{"title":"Elicit","content":"Authored by:: [[P- Brendan Langen]]\n\nAI research assistant that provides assistance with Lit Reviews, abstract summarization, claim validation, and many more features. \n\nElicit is built for academics and research professionals using GPT-3. \n\nElicit performs a large number of tasks, to which some are shown below. \n![[Pasted image 20211220155223.png]]\n\n\nOne prominent feature is to perform a lit review as it relates to a question, seen here.\n![[Pasted image 20211220155342.png]]\nResponses are generated that fit the natural language query. \n![[Pasted image 20211220155413.png]]\n\nThe model can then be trained to specify answers that match your search, bringing the human into the loop. \n\nhttps://twitter.com/i/status/1440380523180818440","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Figma":{"title":"Figma","content":"Authored by:: [[P- Brendan Langen]]\n\nFigma is a collaborative design tool that enables rapid brainstorming, prototyping, and iteration. Figma's ecosystem is packed with design systems, components, and plugins from major companies and independent designers. This [[C- End-user scripting enables creative workarounds|end-user scripting enables creative workarounds]] for design teams around the world. \n\n[[C- We can add additional visual information on top of existing metadata]]\n\nLive board for related UI - https://www.figma.com/file/kHLDEecCMvZAIDnfe95tmp/graph-research-visual-inspo?node-id=0%3A1","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/GUI":{"title":"GUI","content":"Authored by:: [[P- Brendan Langen]]\n\nA graphical user interface, or GUI, is a presentation layer atop an application. Most user interfaces today are GUIs, although a variety of other options exist, including Command Line Interfaces and Command Line User Interfaces. \n\nGUIs enable constructed additions, which allows affordances like [[ZUI]]s to exist atop them.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Gigjam":{"title":"Gigjam","content":"Authored by:: [[P- Brendan Langen]]\n\nMicrosoft tool from 2016-2017 aimed at on-the-fly collaboration in virtual spaces, referenced by [[P- Chris Granger]] during his time there. \n\nGigjam made a few interesting design decisions that prefaced the decentralized networking boom. \n1. Users could build their own mini groups for different gigs, giving them spaces to share different sets of information depending on who was in the gig with them.\n2. This occurred through API plug-ins where users could select what would be shown/redacted within a given card - an amazing level of privacy and choice afforded to the user.\n3. Beyond just mouse and keyboard control, gigs used touch and voice input, as well.\n\n![[Pasted image 20211212125337.png]]\nIn the image above, you could draw a circle around the data you wanted to be included, and an X over anything you want to redact. \n\n\u003e GigJam combines data from a variety of services including Microsoft‚Äôs own Office 365, Trello, Dropbox, and Salesforce. Users can then bring that information into a shared workspace, or ‚Äúgig,‚Äù allowing them to quickly work together.\n   \n\u003e Users can easily redact part of the information they‚Äôre sharing with other people, meaning they can selectively share only what needs to be seen in order to get a job done.¬†\n\n\u003e Here‚Äôs how it works: One user starts a ‚ÄúGig,‚Äù and then pulls in information from whatever services they need, like email, Salesforce, Office documents, and Asana tasks. That information shows up as a card inside GigJam, where users can highlight some information inside a card, redact other information, and then send the whole bundle off to another user for review or editing.\n\n\u003e It‚Äôs a good way to both keep focused on the task at hand (like editing only one slide out of a PowerPoint presentation) and also enables workers to more easily team up with people outside of their organization, like suppliers and contractors who shouldn‚Äôt be privy to some information.¬†\n\n\u003e The GigJam interface also combines a bunch of interesting input methods. Users can work entirely with the keyboard and mouse, but they can also interact with Gigs using touch and voice input. The service is a crazy bundle of different modern capabilities and looks in demos like something out of the future.\n\n\nhttps://www.pcworld.com/article/414816/microsofts-fascinating-gigjam-service-is-open-to-anyone-who-wants-an-invite.html","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Hode":{"title":"Hode","content":"Authored by:: [[P- Brendan Langen]]\n\nHode (Higher Order Data Editor) is a Haskell program for reading, writing and searching what might be loosely termed a hypergraph. It's like a knowledge graph, but more expressive -- atoms and relationships can both be members of other relationships, which are labeled and can have any number of members.\n\nCreated by [[P- Jeffrey Benjamin Brown]] https://github.com/JeffreyBenjaminBrown\n\n\u003e There are three branches to Hode: The RSLT data structure, the Hash language for describing subsets of an RSLT, and the UI, which lets you use the previous two things.\n\u003e A Rslt (Reflexive Set of Labeled Tuples) is a generalization of a knowledge graph. It lets a user easily represent any natural language expression. (A `Rslt` is isomorphic to what some programmers call a \"hypergraph\" -- but mathematicians claimed that term first, and in math it means something much less expressive.)\n\u003e A `Rslt`is a collection of expressions, each of which is either a phrase (like \"cats\"), or a relationship (like \"cats have noses\") or a template (like \"_ have _\") shared by many relationships.\n\u003e What distinguishes a `Rslt` from a `graph` is that relationships can involve any (positive) number of members, and a relationship can itself belong to other relationships.\n\u003e Hash is a language, close to ordinary natural language, for talking about expressions in a `Rslt`. It offers a concise representation, both for individual `Expr`s (expressions) in a `Rslt`, and for queries to retrieve sets of `Expr`s.\n\u003e The UI displays expressions from your graph using [the Hash language](https://github.com/JeffreyBenjaminBrown/hode/blob/master/docs/hash/the-hash-language.md).\n\nExamples in action.\n```\n/a (mammals #need calcium) #because (mammals #build bones)\n```\n\n```query\nmammals\n\t#need _\n\t7: \"mammals #need calcium\"\n```\n![[Pasted image 20210912173246.png]]\n\n```\n`/find /eval bob #likes pizza ##with pineapple ###because /it)` -- Returns only the reason, not the full \"because\" relationship.\n```\n\n```\n`/find bob #likes /_ /|| bob #dislikes /_` -- Every #likes and every #dislikes statement with bob on the left.\n```\n\n\n![[Pasted image 20210915183241.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Hypercard":{"title":"Hypercard","content":"Authored by:: [[P- Brendan Langen]]\n\nHyperCard is an example of early [[end-user programming]] in the wild. Released in 1987 by Apple on the Mac, HyperCard included its own [[DSL]] - HyperTalk - that enabled users to create hypermedia systems. HyperTalk was written in a syntax that resembled the English language, which enabled many non-programmers to interact with the cardstack structure expressed by HyperCard. \n\nHyperCard was deprecated in 2004. \n\n\u003e The beauty of HyperCard is that it lets people program without having to learn how to write code ‚Äî what I call \"programming for the rest of us\". HyperCard has made it possible for people to do things they wouldn't have ever thought of doing in the past without a lot of heavy-duty programming. It's let a lot of non-programmers, like me, into that loop.\n\nDavid Lingwood, APDA[4](https://en.wikipedia.org/wiki/HyperCard#cite_note-APDA_Pinpoints-4)","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Hypernote":{"title":"Hypernote","content":"Authored By:: [[P- Rob Haisfield]]\n\nGraph database based outliner, Roam predecessor, displays powerful use case for attributes and triples well. https://www.loom.com/share/7115476e01c342a3bd58a2734489dced","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Hypothesis":{"title":"Hypothesis","content":"Authored by:: [[P- Brendan Langen]]\n\nHypothes.is allows users to annotate webpages or documents in their margins, providing the option to further enrich a snippet with context. Sharing is built in to Hypothes.is, affording added context and active reading across groups. \n\nThis enables social tagging, which helps users find related content and build community. [[C- Social tagging is a key user behavior to managing a decentralized knowledge graph|Social tagging is a key user behavior to managing a decentralized knowledge graph]]. This can come in the form of text, likes or [[C- Emoji reactions are a form of social tagging|emoji reactions]]. \n\n\n![[Pasted image 20210915173128.png]]\n![[Pasted image 20210915182506.png]]\n\nIn an exciting development, the W3C Web Annotation recommends expanding upon their functionality by binding annotations to specific subregions of PDFs, which would enable [[interoperability]] beyond the tool alone.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-A-DSL-for-a-discourse-graph-with-information-entry-visualization-and-retrieval":{"title":"I- A DSL for a discourse graph with information entry, visualization, and retrieval","content":"Authored By:: [[P- Rob Haisfield]]\n\n[Wikipedia](https://en.wikipedia.org/wiki/Domain-specific_language) defines a DSL as such: \"A domain-specific language (DSL) is a computer language specialized to a particular application domain.\" Through a DSL for decentralized discourse graphs, we would enable people to communicate information in a machine/human readable way.\n\nWhen thinking through [[Q- What are powerful interfaces for entering information into a discourse graph]], one of our biggest hypotheses is that a domain-specific languages can enable a high degree of expressivity and efficiency, and that GUI affordances can serve as scaffolding. Since my work with GuidedTrack, [I have come to believe that this is a powerful new design paradigm.](https://robhaisfield.com/notes/domain-specific-languages-as-end-user-software). ^O451bE\n\nWe should note that a DSL as we define it does not need to interface through a plain text file. They could feasibly go through spreadsheets, canvases, and block based editors as well. The point is that the syntax will allow people to communicate more information and metadata than simply writing a document would. People will have prebuilt, high level, declarative functions, like `query`, `sort`, `group`, `view-as-map`, `create-table` etc. that are unintimidating to use, and they will be able to create custom functions. %%[[Todo List for LitReview]] rewrite this paragraph, fill out my DSL notes a bit more from stuff I already have on my website.%%\n\nThese functions could be simple to both create and call. In [[Notion|Notion]] and [[Roam Research]], they use slash commands to call functions on a block. This can more or less be thought of as [[autocomplete]]. In [[Emacs]], they use the infamous M-X. [[Nextjournal]] implements [[R- clojureD 2021- Command and Conquer- Learnings from Decades of Code Editing by Philippa Markovics#^d181c3|a context aware version of M-X]], where it only shows you the functions that are possible given your context. ^f773de\n\n![[Pasted image 20210930175757.png]]\n\nAdditionally, not all information that is entered needs to be code. For example, a [[Literate programming interface]] might have a block based editor where the text in each block is understood as writing unless otherwise specified as a code block. The default assumption for a DSL for a discourse graph would likely be the same. One can also look at [[Pollen]] as an example for inline coding. There, you write prose normally, but when you want to apply a function to text within your prose you use a unique identifier, like using the following ‚óäem{to bold} what is within the curly brackets. This syntactical form is referred to as an X-Expression.\n\n[[Q- What are powerful primitives for a user of a decentralized knowledge graph#^3962fe|Roam Research]] is able to infer which page and block references are related to each other from collocation in a block or in a branch of an indentation tree. Each page and block has a unique ID, and whenever those IDs are referenced in another block, those IDs are related to the block through a children-nodes attribute. %%[[Q- What are powerful interfaces for entering information into a discourse graph#^qJBroo]]%% ^UZRFe9\n\nWhile text is an interface for information entry, the end visualizations need not be limited to text. [Flowchart.fun](https://flowchart.fun/) is able to infer a flowchart structure from indentation, attributes, and references. This serves as a useful expansion to the meaning inferred from indentation.\n\n![[Pasted image 20210913182317.png]]\n\nWe do not yet know what the syntax will be. This will certainly be informed by our explorations of [[Rob/Q- What is the data structure of a graph built to facilitate decentralized knowledge synthesis]] and user interviews.\n\nHowever, typed edges and nodes are an expressive backbone, as can be seen with [[Hode]]. Hode allows you to create edge and node relationships between items fluidly as you write. It then allows you treat a set of items with a relationship as an entity that can have relationships with other ideas.\n\nOn the extreme end, one might ask, \"Do we need to have defined ontologies, or can AI or neural networks replace databases?\" *See [[R- Neural Databases]]*\n\n[[Programmable text interfaces are the future]]. Text is familiar and fast. When you replace buttons with functions and add control flow / abstraction, it unlocks powerful custom use cases. Structural editors and other means can facilitate the growth of newcomers, who are able to gain value from the beginning, towards expertise, where they will never want to use anything else.\n\n%%### Premise%%\n\n%% [[C- A DSL could be a powerful interface for entering information into a discourse graph]]%%\n\n%%[[C- Questions come with their own markup]]%%\n\nBy allowing people to write data structures and queries inline, we allow for [[Literate programming interface|literate programming]]. When people include a number, they can also include the formula or query that results in displaying that value. In that way, readers would be able to verify the evidence. \n![[Pasted image 20211117170352.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Enable-composable-queries-to-facilitate-structure-in-hindsight":{"title":"I- Enable composable queries to facilitate structure in hindsight","content":"Authored By:: [[P- Rob Haisfield]]\n\n\n[[[I- Populate the related items section through a search term](Migrated/I- Populate the related items section through a search term.md|If a page's related items section is defined through a search term]]), then we can think of the page title and its query as a key-value pair. The data structure would look something like this:\n```clojure\n\"structure in hindsight\" means \n  (any: \"structure in hindsight\" \n        (all: (any: \"structure\" \"structuring\")\n              \"hindsight\")\n\"structure in foresight\" means \n  (any: \"structure in foresight\" \n        (all: (any: \"structure\" \"structuring\")\n              \"foresight\")\n\"structuring across time\" means\n        (any: \"structure in hindsight\"\n              \"structure in foresight\")\n\"PCT\" means\n  (any: \"PCT\"\n        \"Perceptual Control Theory\")\n\"SDT\" means\n  (any: \"SDT\"\n        \"Self-Determination Theory\")\n\"Behavioral Science Theories\" means\n  (any: \"Behavioral Science Theories\"\n        (any: \"SDT\"\n              \"PCT\"))\n\"Theories\" means\n  (any: \"Behavioral Science Theories\"\n        \"Political Science Theories\"\n        \"Biology Theories\")```\n\nOver time, composable queries fight entropy. We would frequently see people create multiple pages that mean the same thing simply because their body of notes had grown so large that they didn't remember they had already created other pages to refer to the same concept. \n\nThis is a huge challenge of adding structure! In our private research notebook, we refer to this problem of entropy from structure in multiple ways (for example, `[[Q- How might we prevent workflow entropy]]`and `[[[[I- Enable composable queries to reduce system entropy]]]]`).\n\nWe aim to [[work at the speed of thought]], but too much structure creates paralyzing cognitive overhead. [[C- An increasing amount of structure leads to entropy]] [[((Rf-9FlEw9|*]])).\n\n[[Roam]] enables users to merge pages together. This affordance aims to solve issues where users have created multiple pages for similar ideas, but the results are different in practice. When two pages represent conceptually \"close\" concepts, users consistently link blocks to both pages to ensure linked references show up on each page. Merging is not always appropriate.\n\nOver time, these duplicate links pile up, and users feel the need to link to a large vocabulary of pages, which brings us back to square one with [[Repeat work]]. Their system's surface area has greatly increased in size, and they're reliant on their own memory to recall each new link they add. Ultimately, this leads to system collapse or abandonment.  \n\nMultiplayer amplifies the problem, [[[Q- How do we solve the problem of different people referring to the same concept with different language](Q- How do we solve the problem of different people referring to the same concept with different language.md|as different people refer to similar concepts with different language]]).\n\nComposable queries enable people to create both aliases and hierarchies. Aided by the full expressiveness of a query language, composable searches empower people to build up their own semantic dictionary and thesaurus over time. As the queries can be adjusted at any point, this is a promising solution to the question: [[Q- How might we allow people to adapt their past system and notes to current needs.md]]?","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Populate-the-related-items-section-through-a-search-term":{"title":"I- Populate the related items section through a search term","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\nIn the [[uncertain payoff, regret)](structure now vs. later (uncertain payoff, regret|structure now vs. later (uncertain payoff, regret)]]) tradeoff, people tend to [[[Why people prefer to structure later or not at all](Why people prefer to structure later or not at all|defer structuring until later]]) or not structure at all. Search is the primary tool people have available for resurfacing unstructured information. However, search can be extended to be the basis for creating structure in hindsight. [[Search is the primary tool people have available for resurfacing unstructured information. However, search can be extended to be the basis for structuring. As explored in [I- Search as a part of the primitive design Index](Migrated/I- Search as a part of the primitive design Index.md|*]] within [[../LitReview/Main/I- A DSL for a discourse graph with information entry, visualization, and retrieval.md|I- A DSL for a discourse graph with information entry, visualization, and retrieval]]:)[[((efYI_8nR1|*]])) [[((9FONcsK9B|*]]))\n\nFor example, a page titled `[[Behavioral science theories]]` could have a \"related items\" section defined by a search for `[[Behavioral science theories]]` or any time any specific theory (e.g. `[[Perceptual Control Theory]]` or `[[Self-Determination Theory]]`) is mentioned. [[For example, a page titled `[Behavioral science theories](Behavioral science theories|*]]` could have \"relevant info\" section defined by a search for `[[Behavioral science theories]]` or any time any specific theory (e.g. `[[Perceptual Control Theory]]` or `[[Self-Determination Theory]]`) is mentioned.) [[((1z5iGlt7o|*]]))\n\nThe search might look like: `any: [[Behavioral science theories]] [[Perceptual Control Theory]] [[Self-Determination Theory]]` [[((aUSPEY_zQ|*]]))\n\nThese searches could then be composable, enabling more efficient categorization. For example, I might have a page titled `[[Theories]]` with an \"associated items\" section defined by the \"associated items\" sections for `[[Behavioral science theories]]` and `[[Biology theories]]`. [[These searches could then be composable, enabling efficient abstraction. For example, I might have a page titled `[Theories](Theories|*]]` with a \"relevant info\" section defined by the \"relevant info\" sections for `[[Behavioral science theories]]` and `[[Biology theories]]`.) [[((dTxY967Ru|*]]))\n\nAlternatively, a page titled `[[Intersection points in user experiences]]` could have a related items section defined as a search for any block or page that mentions multiple user names at a time. [[Alternatively, a page titled `[Intersection points in user experiences](Intersection points in user experiences|*]]` could have a \"relevant info\" section defined as a search for any block of information that mentions multiple user names at a time.) [[((PLo-XvVAs|*]]))\n\nThere are few things that are more expressive than a search. [[C- Search terms express intentions.md]]. Through logical operators like ANY, ALL, NOT, IF, and custom relational rules people are able to express precisely what they consider relevant and in which contexts. Logical operators and query syntax are subject to future debate. There could be graph query operators, for example, that indicate \"show me anything within 2 degrees of connection to this node.\" [[((sRYFC0T3c|*]])) [[((b_bhownxn|*]]))\n\nNow let's get fancy with it, to show more interesting examples of what is possible for [[../LitReview/structure in hindsight.md|structure in hindsight]] and [[structure in foresight]].\n\nSee, for example, how I map Roam queries to English questions so I'm able to find an answer [in minutes 20-30 of this video](https://youtu.be/47A0gK7Vo8E?t=1200). Those questions did not have a set of backlinks because there was no single page to backlink to! If I created a new page for each question, the backlinks would be empty until after I had searched through my notes and manually added linked references to the question page. By creating a query, I was able to say: \"All blocks that match these rules are relevant to this question, even if there is not an explicit reference to this question.\"\n\nEffectively, this enabled me to process past notes in bulk. [[../LitReview/Extended Universe/WIP/C- A decentralized discourse graph is dynamic.md|C- A decentralized discourse graph is dynamic]], and wrangling past data into new slots through search is one way to answer the question: [[Q- How might we allow people to adapt their past system and notes to current needs.md]]? Queries like this reduce work going forward, as they mean I don't need to remember to reference a specific page every time if there are other mechanisms for inclusion into a related items section. [[((ex1D3eB8o|*]]))\n\nThe above example points towards another powerful use for queries: Smart folders. [[((Yz6ncv7Ia|*]]))\n\nMost file systems require you to manually add files into different folders. Keeping these folders up to date can be a challenging job. The same problem holds true for note taking apps where you need to manually place a tag or bidirectional link in order to put ideas into buckets. [In Apple's Finder](https://www.howtogeek.com/403077/how-to-automate-your-mac-with-smart-folders/), you have the ability to create smart folders. These smart folders are populated by the results of a search, so they autoupdate when new content is added to your file system that matches certain criteria. In essence, this enables you to create organization systems now to capture knowledge in the future. [[((a-xDEH3Hi|*]]))","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Provide-Push-and-Pull-as-inline-syntax-to-affect-the-related-items-section-for-a-page":{"title":"I- Provide Push and Pull as inline syntax to affect the related items section for a page","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nAs mentioned on [[I- Replace the backlinks section of a page with a related items section]], [[C- Linked references are a smart default for related items]] but are not a complete description of what is related. The exclusive use of backlinks to define a related items section leads to the problems outlined on [[Q- How do we solve the problem of different people referring to the same concept with different language]]\n\nWhile [[[I- Populate the related items section through a search term](Migrated/I- Populate the related items section through a search term.md|populating the related items section through a search term]]) solves that problem with precision, editing the search term would likely require a decent amount of effort. [[Agora]] provides an ergonomic solution with their Push and Pull mechanisms.\n\nWithin [[Agora]], if you are writing on a page and believe the backlinks for another page would be relevant, you can write `[[pull]] [[page2]]`. Push does the opposite, pushing backlinks from the page you are writing on to another page's backlinks section.\n\nFor example, imagine you have a page called `[[Graph Core Protocol Development Teams]]`. On that page, you could `pull` references to each team into the related items section of development teams page. The search term that populates the related items section would adjust in response to uses of `push` and `pull`, looking something like *(syntax isn't final)* `(any: [[Graph Core Protocol Development Team]] [[Edge \u0026 Node]] [[Figment]] [[Semiotic.ai]] [[StreamingFast]] [[The Guild]])`","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Replace-the-backlinks-section-of-a-page-with-a-related-items-section":{"title":"I- Replace the backlinks section of a page with a related items section","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\n\nWe can [[I- Populate the related items section through a search term]]. Since [[content/garden/LitReview/C- Linked references are a smart default for related items.md|C- Linked references are a smart default for related items]], linked references should be the default search term so users don't have to do additional manual work to make the related items section useful. To give users a low friction way to edit the search term for a page's related items, we can [[I- Provide Push and Pull as inline syntax to affect the related items section for a page]].\n\nThis could [[I- Enable composable queries to facilitate structure in hindsight]]. Because users struggle with the dilemma to [[uncertain payoff, regret)](structure now vs. later (uncertain payoff, regret|structure now vs. later (uncertain payoff, regret)]]), a query with related items affords a user the chance to add structure indirectly, and in the moment of ambient review. We suspect this will reduce system entropy over time.\n\nGiven that search terms can be defined to bring in a broader array of stuff than a simple list of backlinks, users will require a way to filter their results. As described in [[Interfaces for adjusting a query.md]], this does not all need to occur through text entry.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Search-as-a-part-of-the-primitive-design":{"title":"I- Search as a part of the primitive design","content":"Authored By:: [[P- Rob Haisfield]]\n\nThere are few things that are more expressive than a search. [[C- Search terms express intentions]]!\n\n[[C- Linked references are a smart default for related items]]. This is actually quite a conservative idea- if a block of text or a page has the same set of words as those present in the title of a page, then it's probably related. However, what if people could tweak the rules of what's considered relevant to a page? Through logical operators like AND, OR, NOT, and IF, people are able to express precisely what they consider relevant and in which contexts. How people fit information into the data structure of discourse graph should make them feel like they are building a conversation partner. Queries are how you can turn [your past notes into a conversation partner](https://subconscious.substack.com/p/notes-are-conversations-across-time). \"What have I thought about already on this subject? I see... these 3 results make sense in my current context, and raise another question...\"\n\nSee, for example, how I map Roam queries to English questions so I'm able to find an answer [in minutes 20-30 of this video](https://youtu.be/47A0gK7Vo8E?t=1200). Those questions did not have a set of backlinks because there was no single page to backlink to! Even if I created a new page, the backlinks would be empty until after I had searched through my notes and manually added references to the question page. By creating a query, I was able to say: \"All blocks that match these rules are relevant to this question.\" Effectively, this enabled me to process past notes in bulk. [[C- A decentralized discourse graph is dynamic]], and wrangling past data into new slots through search is one way to answer the question: [[Q- How might we allow people to adapt their past system and notes to current needs]]?\n\nThe above example points towards another powerful use for queries: Smart folders.\n\nMost file systems require you to manually add files into different folders. Keeping these folders up to date can be a challenging job. The same problem holds true for note taking apps where you need to manually place a tag or bidirectional link in order to put ideas into buckets. [In Apple's Finder](https://www.howtogeek.com/403077/how-to-automate-your-mac-with-smart-folders/), you have the ability to create smart folders. These smart folders are populated by the results of a search, so it autoupdates when new content is added to your file system. In essence, this enables you to create organization systems now to capture knowledge in the future.\n\nHowever, search terms alone are not sufficient. People do not always know how to express what they are looking for. In that case, we have exploratory search and browsing *(see [[Search Behavior]]).* They will need navigational aids as well.\n\nWikis are one such navigational aid. [Through hypertext](https://robhaisfield.com/notes/writing-in-hypertext), wikis enable people to seamlessly jump from page to page. People often compete in [Wikiraces](https://en.wikipedia.org/wiki/Wikipedia:Wikirace) where they have to go from a random article to a specific one as quickly as they can by only clicking on hyperlinks. These have become even more popular lately in [digital gardens](https://joelhooks.com/digital-garden). Some examples include [[P- Andy Matuschak]]'s [working notes](https://notes.andymatuschak.org/About_these_notes), my personal public [hypertext notebook](https://robhaisfield.com/about), and a more recent [academic literature review example by Matt Clancy](https://www.newthingsunderthesun.com/about) on innovation economics.\n\nBidirectional links are another aid. As stated by [[P- Andy Matuschak]]:\n\n\u003e Systems which display backlinks to a node permit a new behavior: you can define a new node extensionally (rather than intensionally) by simply linking to it from many other nodes‚Äîeven before it has any content.\n\u003e ...\n\u003e This effect requires [Contextual backlinks](https://notes.andymatuschak.org/z3RzQhmjeRxXVAAy81aUSKARwJL8dikdJG4VG): a simple list of backlinks won‚Äôt implicitly define a node very effectively. You need to be able to see the context around the backlink to understand what‚Äôs being implied.\n\n^da790c\n\nLook at this screenshot. I knew I was looking for something related to \"contextual backlinks,\" so after finding that on google, I was was able to look through the backlinks and find the page that I was looking for: [\"Backlinks can be used to implicitly define nodes in knowledge management systems.\"](https://notes.andymatuschak.org/Contextual_backlinks?stackedNotes=z2newCwFfd6iZFyf9bgspkbyt1G8wbQxJVgTK) The backlinks themselves are contextual. They don't just show the page that a phrase is connected to, but also the paragraph that it was linked in.\n\nAndy Matuschak's working notes, like a wiki, use hypertext to communicate in an information dense way. This facilitates easy navigation where people are able to find what they are looking for [even when they don't quite know how to express](https://twitter.com/RobertHaisfield/status/1265306759356223493?s=20) it.\n\n![[Pasted image 20210913163109.png]]\n\nMatuschak adds an additional navigation layer to the UX of the wiki- when you click on a link in the page to the left, it opens that up to the right. This gives the effect of a book that rearranges its pages for you based on your present curiosity. One idea I've designed is to expand that out into 2D navigation, where people lay out the tiles, as seen in this working Figma file (https://www.figma.com/file/kHLDEecCMvZAIDnfe95tmp/graph-research-visual-inspo?node-id=0%3A1).\n\nThe signal/noise ratio is a very big problem when it comes to exploratory search or browsing. The natural inclination is to broaden a search term so people don't have to specifically express what they are looking for. However, in a decentralized discourse graph, you need to deal with the problem of quantity. If you have thousands of pages worth of information in a graph with many contributors, broadening the search will show you too many results.\n\nAs I mentioned earlier, [[C- Search terms express intentions]]. However, not all search results will be relevant to your present intention. [[C- People need a way of promoting and demoting knowledge in a decentralized knowledge graph]]. In the context of a search, [[C- Highlighted and lowlighted search results map to how well results map to intentions]]. Highlighting and lowlighting could come in other forms, such as [quadratic voting](https://twitter.com/metamitya/status/1248768114768084994?s=20), utilized in [[Knovigator]].\n\n[[C- People are lazy]]. This is one of the key barriers to creating a semantic web, so user work that could add meaningful metadata should not be wasted. In asking [[Q- What is the data structure of a graph built to facilitate decentralized knowledge synthesis]], we should note that if the data structure is able to take into account searches, search results, and quality signals, then the result discourse graph structure is fairly semantic. Perhaps the information from these searches could inform the ranking of items in future searches, and what is considered related content. This can itself be seen as a form of incremental formalization.\n\nIt's important to ask [[Q- What changes in a discourse graph as quantity of content increases]]: for example, it is common for Roam's new users to excitedly claim: \"Roam's organization gets better as you write more!\" However, [reverse entropy requires specific patterns of user behavior](https://twitter.com/RobertHaisfield/status/1259504520830136320) and is not a given. By using outlines as a data entry interface for their knowledge graph, they encourage patterns of divergent creativity. At its worse, this can lead you with so much information that it feels impossible to bring it all together.\n\nPeople need an interface for convergence as well. [[P- Joel Chan]] writes about this as [incremental formalization](https://roambrain.com/knowledge-synthesis/). [[C- Incrementally processing notes is a key user behavior to promote synthesis|Incrementally processing notes is a key user behavior to promote synthesis]]. In doing so, they progressively compress large amounts of information into smaller amounts, which allows people to more easily compose ideas and define their relationships. Writing in hypertext allows people to have an incredible amount of information density. As Andy Matuschak [likes to say](https://notes.andymatuschak.org/Evergreen_note_titles_are_like_APIs):\n\n\u003e When [Evergreen notes](https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C) are factored and titled well, those titles become an abstraction for the note itself. The entire note‚Äôs ideas can then be referenced using that handle (see [Concept handles, after Alexander](https://notes.andymatuschak.org/z5vA4vw86DKNq22xt6pRWhumeRmSzwV6hxRHE)). In fact, this property itself functions as a kind of litmus: as you develops ideas in notes over time and improve the ‚ÄúAPIs,‚Äù you‚Äôll be able to write individual notes which abstract over increasingly large subtrees (e.g. [Enacted experiences have incredible potential as a mass medium](https://notes.andymatuschak.org/z6oXuXLZ7Wq1eBqskyfph2wz9gjohQUKSBFzx), [Evergreen note-writing as fundamental unit of knowledge work](https://notes.andymatuschak.org/z3SjnvsB5aR2ddsycyXofbYR7fCxo7RmKW2be)). ^ee42bf\n\nWhen you have read much of a person's work in a well structured hypertext notebook, you can build a rich mental model of their thinking. I've read so much by [[P- Tom Critchlow]] that, when I read a 6 tweet long twitter thread, I am able to connect it to his [bigger worldview](https://twitter.com/RobertHaisfield/status/1418236841275183111) and even simulate conversations with him. This is because hypertext writing is information dense and refers to sets of ideas in consistent ways. Given that our goal is to combine knowledge at a large scale, information density is crucial.\n\nWe have also seen summarization as a way to compress information. [[Wikum|Wikum]] [allows]((http://wikum.csail.mit.edu/)) its users to summarize groups of comments in a Hacker News or Reddit like forum. Summaries can be built on other summaries, allowing people to zoom out and see what a discussion was about at a high level before going into the weeds to read each comment. This demonstrates the need for a [[ZUI|Zoomable User Interface]]. *See [[C- An ideal decentralized discourse graph would enable people to view information at different levels of granularity through a ZUI]]*\n\n![[Pasted image 20210913173741.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Search-as-a-part-of-the-primitive-design-Index":{"title":"I- Search as a part of the primitive design","content":"- [[I- Replace the backlinks section of a page with a related items section]]\n- [[I- Use search terms as the basis for other features]]\n\t- [[I- Utilize search terms as the basis for user-defined notifications]]\n\t- [[I- Utilize search terms as the basis for user-defined subscriptions]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Use-search-terms-as-the-basis-for-other-features":{"title":"I- Use search terms as the basis for other features","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nA sufficiently detailed search term can be the basis for other features. For example:\n    - [[I- Utilize search terms as the basis for user-defined subscriptions]]\n    - [[I- Utilize search terms as the basis for user-defined notifications]]\n    - [[I- Utilize search terms as the basis for conditional formatting]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Utilize-search-terms-as-the-basis-for-conditional-formatting":{"title":"I- Utilize search terms as the basis for conditional formatting","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nThis one is simple - if we can use search as the basis for other features, and we can [[[Q- How might we apply map filter reduce to notes and what other primitives are relevant to this domain](Q- How might we apply map filter reduce to notes and what other primitives are relevant to this domain.md|map some action onto all of the search results]]). For example, we might search for all claims and then make all wikilinks green.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Utilize-search-terms-as-the-basis-for-user-defined-notifications":{"title":"I- Utilize search terms as the basis for user-defined notifications","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nIn multiplayer applications that do not have native notifications like [[Roam]], we noticed a compensatory pattern in user behavior. Essentially, they would come up with a convention for a special page link to indicate a mention (like `[[@ Rob Haisfield]]` or `[[mention: Rob Haisfield]]`), and then write two queries for seen and unseen mentions. Unseen mentions would be filtered out through the addition of a link like `[[seen]]`.\n\n![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fwrite-hypertext-notebook-graph-research%2Fdri1S1LNrf.png?alt=media\u0026token=90e1df22-759e-4bed-a401-6b967d7198dd)\n\nThis actually isn't far off from a proper notifications system. Its primary problem is that it requires the user to manually visit the location of the queries. The main adjustment would be to ping the user when a new item enters the unseen query. Roam users have hacked around this by writing plugins that would ping them on Slack whenever there was a new mention.\n\nFrom a [[primitive design.md]] perspective, users would need the ability to set up automations, to include \"new result enters query\" as a trigger, and \"send notification\" as an action. From there, the user could define what would notify them by adjusting search terms. This is further enabled by [[[I- Enable composable queries to facilitate structure in hindsight](Migrated/I- Enable composable queries to facilitate structure in hindsight.md|composable queries]]). \n\nIt is important to note that not everyone wants to go through the effort to create their own notifications system, hence the importance of smart defaults. Notification through mentions is unlikely to be controversial as a starting point.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Utilize-search-terms-as-the-basis-for-user-defined-subscriptions":{"title":"I- Utilize search terms as the basis for user-defined subscriptions","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nPiggybacking on [[[I- Enable composable queries to facilitate structure in hindsight](Migrated/I- Enable composable queries to facilitate structure in hindsight.md|enabling composable queries to facilitate structure in hindsight]]), people will be able to define a search term that outlines their interests, such that they will be able to see any time new items are added to the query. From there, they could easily define [[[I- Utilize search terms as the basis for user-defined notifications](Migrated/I- Utilize search terms as the basis for user-defined notifications.md|whether they would like to receive notifications]]) or have a more passive way for keeping up to date, similar to how Gmail will show you the number of unread items in a label.\n![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fwrite-hypertext-notebook-graph-research%2FONhwQVp40E.png?alt=media\u0026token=06082a7a-f7c9-4c2c-b021-509caf216d8b)\n\nFor example, I might be interested in everything that [[P- Joel Chan]]writes. The query might look like:\n ```javascript\n(all: (written-by:\"Joel Chan\"))```\n\nBut maybe I'm only interested in his writing that pertains to synthesis. Then I might adjust my query:\n ```javascript\n(all: (written-by:\"Joel Chan\")\n      \"synthesis\")```\n\nMaybe I want to follow everything written by a politician that pertains to my industry so I can stay up to date on potential regulations. Since we enable composable queries, the query could look as simple as this:\n```clojure\n(all: (property: \"written-by\" list-of-politicians)\n      (any: \"Web3\"\n            \"crypto\"\n            \"cryptocurrency\"))```\n\nCompare this to the black box algorithms people traditionally see in social media newsfeeds. On Twitter, it is unclear what determines whether a tweet is displayed in your feed. It often features \"suggestions\" outside of who you follow based on its perception of your interests.\n\nAt its simplest, a newsfeed could be considered an aggregate of your saved queries. Since queries are composable, that might look like:\n```clojure\n(def \"followed people\"\n  (any: \"John Doe\"\n        \"Jane Buck\"))\n(def \"followed interests\"\n  (any: \"Web3 thoughts from politicians\"))\n(def \"blocked list\"\n  (all: \"Joe Rogan\"))\n(def \"newsfeed\"\n  (any: \"followed people\"\n        \"followed interests\")\n  (not: (any: \"muted authors list\"\n              \"muted topics list\"\n              \"muted items list\")))\n```\n\n ## [[Interfaces for adjusting a query.md]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-Workspaces-as-a-primitive":{"title":"I- Workspaces as a primitive","content":"Authored By:: [[P- Rob Haisfield]]\n\n[[Q- What are powerful primitives for a user of a decentralized knowledge graph]]\n\n[[C- Workspaces enable users to pick up their old context and investigation where they left off]]\n\n- #[[Twitter thread]] [[Robert Haisfield (Recently moved to Berkeley)]]: ü§ØÔ∏è Freeze by @jasonyuandesign @tylerangert  @szymon_k seems incredible! I've been talking for a while in snippets about saved workspaces as a primitive in tools for thought, but with Freeze bringing the concept to desktop, it's time for a thread! üßµÔ∏è https://freeze.app/ [*](https://twitter.com/RobertHaisfield/status/1359542159838502913)\n  - Imagine you're writing a paper or a technical spec in a Word Doc. You work until you're halfway done, and then save it to finish later. You also have a few notes open as reference material. You can re-open the Word Doc later, but you reopen the ref material separately. [*](https://twitter.com/RobertHaisfield/status/1359542160794730496)\n  - What if you wanted to have your reference material open every time you reopen the Doc? If you're only saving one file at a time, then the best you could do is maybe write down your ref material in a checklist for next time. [*](https://twitter.com/RobertHaisfield/status/1359542161767886857)\n  - I posit that most knowledge work is not contained in a single document. You don't just want to re-immerse yourself in the work, but also the context of your work. [*](https://twitter.com/RobertHaisfield/status/1359542163021914115)\n  - On my hypertext garden, every page is interconnected with others, so it's genuinely hard to edit and release one note at a time. Everything is autosaved, but [[Obsidian|Obsidian]] also lets me save and reload arrangements of pages for later. This helps me manage my mental stack. Obsidian's workspace model does feel clunky though - ideally, we would be able to create and destroy workspaces in an instant, form relationships between workspaces as independent entities, [[Q- What implicit metadata can be gathered from the structure of a workspace|form relationships based on coexistence within a workspace]], and search within the contents of a workspace. https://t.co/rLVzjc7Zku [*](https://twitter.com/RobertHaisfield/status/1359542180264747008)\n    - ![](https://pbs.twimg.com/media/Et4QZVxXcAcEmWD.jpg)\n    - ![](https://pbs.twimg.com/media/Et4QaAKXEAsa6UQ.jpg)\n  - Of course, [[Org-mode|Emacs]] did it first (tm). Emacs lets you save your current session to a file, which you can search for and restore later. https://t.co/PFMdBMw6M5 [*](https://twitter.com/RobertHaisfield/status/1359542200397365252)\n    - ![](https://pbs.twimg.com/media/Et4QbL7WQAc7wFp.jpg)\n  - [[P- Iian Neill]] has an interesting variation where each workspace can contain multiple file types (text, media, websites...). The workspace is an entity on a graph, as well as all of its contents. This turns workspaces into a core organizational structure. https://twitter.com/RobertHaisfield/status/1326186101053140992?s=20 [*](https://twitter.com/RobertHaisfield/status/1359542202343583749)\n  - [[Codex OS]] is also doing something really cool where you can see a little preview of the contents of each workspace. Codex has the most powerful implementation of workspaces I have seen so far. https://twitter.com/codexeditor/status/1341374670331756547?s=20 [*](https://twitter.com/RobertHaisfield/status/1359542203685732356)\n  - ![[Pasted image 20210923193416.png]]\n  - [[WorldBrain Memex]] lets you save all of your browser tabs to a collection and then you can full text search their contents. Collections aren't restricted to this purpose, but they can be used like this. https://t.co/YdOURtdK6U [*](https://twitter.com/RobertHaisfield/status/1359542237722533888)\n    - ![](https://pbs.twimg.com/media/Et4Qc_oWQAA80Pk.jpg)\n    - ![](https://pbs.twimg.com/media/Et4QdacWgAQdXEC.jpg)\n  - What makes Freeze cool is that it can save your workspace in a way that spans multiple applications and allows you to search their contents. It's not out yet, but I'm really curious to follow its development üëÄÔ∏è [*](https://twitter.com/RobertHaisfield/status/1359542239811280903)","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/I-dont-want-my-tool-to-tell-me-how-to-think":{"title":"I don't want my tool to tell me how to think","content":"Authored By:: [[P- Brendan Langen]], [[P- Rob Haisfield]]\n\n\n### Advanced tools can be seen as too opinionated.\n\nOpinionated tools for thought can feel restrictive at the point of entry, limiting the user's ability to work at the speed of thought.\n\nOne participant told us that Roam Research was too opinionated when she tried it. You need a course to use it properly and end up indoctrinated into the Roam way of thinking. Her way of thinking is different, so there was a consistent mismatch. In her words, she just wants to inundate her notes with crap but have it all searchable.\n\nAnother participant told us that too much inferred structure from his tools slows him down because that would force him to think about structure. For example, Roam derives its structure from indentation and wikilinks. If he had to think about that while he was brainstorming, it would disrupt his flow. He far prefers the agnostic structure of Miro and its infinite canvas because he can just structure by drawing without worrying about if it will fit properly into his \"system\" later.\n\nInferred structure necessarily encodes assumptions about what user behavior means. Not every user shares those assumptions.\n\nThe learning curve of most advanced tools adds friction to adoption. [Roam Research‚Äôs Daily Notes paradigm](https://forum.obsidian.md/t/using-daily-notes-as-a-convert-from-roam/15393) feels significantly different from Obsidian‚Äôs blank page format. Further, if someone has a system already in place in another tool, the opportunity cost to migrate their structure is high.\n\nUltimately, this comes down to the fact that people are different, and the stage of work we‚Äôre in drives the tools we want to use. Some of us want a zoomable canvas. Others want an outliner. Even more of us want to move between these interfaces and a blank page structure, depending on what the current task demands of us. We operate in different contexts over different stages of work, and while our tools are moving towards flexible interfaces, there is still too much of a one-size-fits-all approach in current user interfaces.\n\nExpert users tend to prefer tools that either share their opinion or are neutral enough to enable them to impose their opinion onto the tool, and not vice versa.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/If-Im-thinking-too-hard-about-structure-before-I-write-the-note-I-forget-what-I-was-going-to-write-down":{"title":"If I‚Äôm thinking too hard about structure before I write the note, I forget what I was going to write down","content":"Authored By:: [[P- Rob Haisfield]]\n\n\nThe title says it all. We spoke with multiple participants who generate ideas constantly, and if they don't write them down immediately, the idea disappears. This points towards the necessity to design low friction [[quick capture]] and overall reduce the requirement to structure information upfront.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Interfaces-for-adjusting-a-query":{"title":"Interfaces for adjusting a query","content":"Authored By:: [[P- Rob Haisfield]]\n\n\ntags: [Q- What are powerful interfaces for entering information into a discourse graph](../LitReview/Extended%20Universe/WIP/Q-%20What%20are%20powerful%20interfaces%20for%20entering%20information%20into%20a%20discourse%20graph.md)\n\nNot all edits to the query have to be within the query editor. In [I- Provide Push and Pull as inline syntax to affect the related items section for a page](I-%20Provide%20Push%20and%20Pull%20as%20inline%20syntax%20to%20affect%20the%20related%20items%20section%20for%20a%20page.md), we outlined how `push` and `pull` work as an inline DSL to add to a related items query's `any` clause. \n\n [C- User behavior within a well-designed choice architecture can be a signal of preferences](../LitReview/C-%20User%20behavior%20within%20a%20well-designed%20choice%20architecture%20can%20be%20a%20signal%20of%20preferences.md). We can see how this happens with [newsfeed management mechanisms]([C- Newsfeed management can enable users to express their preferences through a combination of revealed preferences and declared preferences](C-%20Newsfeed%20management%20can%20enable%20users%20to%20express%20their%20preferences%20through%20a%20combination%20of%20revealed%20preferences%20and%20declared%20preferences.md)). As people are looking through the results of a query, they might right click then select the option: \"remove from query.\" The menu path might look like the following, where each of the topics could be toggled:\n - ```clojure\n{:remove {:itemID sladfkji4af4sdkf\n          :author \"John Doe\"\n          :topic-mentioned [\"topic1\"\n                            \"topic2\"\n                            \"topic3\"]}}```\n\nWhen people click on an \"x\" on the query result's item, the smart default could be to remove that block's UID from the query through `(not (any: uid1 uid2))`.\n\nImagine \"economic inflation\" were a topic mentioned in an item within your newsfeed query and you right clicked to remove that topic. This might translate into the following:\n```clojure\n(def muted-topics-list\n  (any: \"economic inflation\"\n        \"veganism\"))\n(def muted-items-list\n  (any: uid1\n        uid2))\n(def newsfeed\n  (any: followed-people\n        followed-interests)\n  (not: (any: muted-authors-list\n              muted-topics-list\n              muted-items-list)))```\n\nAlternatively, users might process the list of query results through highlighting and lowlighting. [C- Highlighted and lowlighted search results map to how well results map to intentions](C-%20Highlighted%20and%20lowlighted%20search%20results%20map%20to%20how%20well%20results%20map%20to%20intentions.md), so the default assumption could be that lowlighting a block would remove that block from the query results. A block id would then have a `queries-where-highlighted` and `queries-where-lowlighted` property, listing the relevant queries.\n\nIt's possible that users don't always want to reify an entirely new query as an entity, and sometimes would like to simply filter a query. Given the compositional nature of the language I'm proposing, it should come as no surprise that we can apply a filter function to any list of query results.\n ```clojure\n(query:\n  newsfeed\n  (any: \"behavioral economics\"\n        \"web3\")\n  (not: \"regulation\"))```\n\n[Roam](Roam) has a GUI for manipulating these filters that can go beyond the language interface described above. For example, below, I'm filtering all linked references to `[Rob Haisfield](Rob%20Haisfield)` for `[CLM](CLM)` (claims) and `[EVD](EVD)` (evidence) that are connected.\n\n![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2Fwrite-hypertext-notebook-graph-research%2FRwZUCu20fg.png?alt=media\u0026token=314cf155-c8ec-4904-a051-8cb6b4496269)\n-  If written in my proposed query syntax, this would look like the query below. An `all:` operator is assumed at the beginning of the query.\n ```clojure\n(query: \"Rob Haisfield\"\n        \"CLM\"\n        \"EVD\")```","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Jump":{"title":"Jump","content":"Authored by:: [[P- Rob Haisfield]]\n\n[[C- Jump teaches users 3 core concepts]]\n\n![[Pasted image 20211222123954.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Kanopi":{"title":"Kanopi","content":"Authored by:: [[P- Brendan Langen]]\n\nKanopi is a multimodal tool for knowledge management that provides different views for thought through linked notes, maps, and trees. Kanopi allows users to define relationships between nodes to create meaning, speaking to the idea of [[I- A structural editor for composing relationships between files or blocks]]. Kanopi has pre-loaded web integrations with Wikidata and Semantic Scholar that appear in search results.  \n\nSolo built by [[P- Brian James Rubinton]]. \n\n![[Pasted image 20210916113356.png]] - linked notes\n![[Pasted image 20210916113423.png]] - maps\n![[Pasted image 20210916113506.png]] - trees","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Knovigator":{"title":"Knovigator","content":"Authored by:: [[P- Brendan Langen]]\n\nKnovigator allows users to build atop other comments and threads in the form of quests. \nTheir system uses quadratic voting on each block in order to indicate how important or relevant it is. \n\nKnovigator uses the vocabulary of threads as quests. Threads are lists of short, related posts around a topic (i.e. bitcoin mining). They refer to these short posts as messages, which can be re-used as blocks in other threads. This also allows the ability to add evidence to reinforce or refute claims. \n\nKnovigator also enables user queries to turn into quests, which can later be linked to related threads. \n[[Q- How might you allow people to query information without explicit knowledge of how that information is structured]]\n\n[[C- An ideal decentralized knowledge graph would map a social graph and a knowledge graph]]\n\n\n![[Pasted image 20210916104840.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Kosmik":{"title":"Kosmik","content":"Authored by:: [[P- Brendan Langen]]\n\nKosmik positions itself as a visual representation for data, following along with other recent networked tools for thought. Kosmik draws personal parallels to whiteboards and art boards as a note-taking app. \n\n[[R- Kosmik App a visual tool for thought with an IPFS database]]. A principle of Kosmik is visual-first that gives the user an ability to zoom in, out, and across their digital space - which they call the Kosmik Universe. This suggests [[I- Workspaces as a primitive]] as a future design element to the discourse graph. \n\nBuilt by [[P- Paul Rony]]\n\n![[Pasted image 20210916111811.png]]\n![[Pasted image 20210916112255.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Learning-Loop-Complex":{"title":"Learning Loop Complex","content":"Authored by:: [[P- Brendan Langen]] and [[P- Joel Chan]]\n\nAs seen in [[R- The Cost Structure of Sensemaking]] -0\nIntroduces the [[Learning Loop Complex]] and idea of encodon as bridge between data and representations (schemas) that are then used for downstream tasks during sensemaking.\n\n![[Pasted image 20210928155633.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/LiquidText":{"title":"LiquidText","content":"Authored by:: [[P- Brendan Langen]] and [[P- Joel Chan]]\n\nLiquidText is an annotation tool alongside PDFs that enables [[active reading]]. LiquidText's simple interface has made it a favorite among Mac and iPad users, including collaboration for synthesis in larger groups. \n\nThe tool was described by its founder, [[P- Craig Tashman]] following his PhD research at Georgia Tech in [[R- LiquidText A Flexible Multitouch Environment to Support Active Reading]]. LiquidText allows to \"pull out\" excerpts and make pointers to context, and use these units on a canvas to weave together a larger understanding, albeit in a less formal fashion\n\n-   [https://www.liquidtext.net/](https://www.liquidtext.net/)\n\u003e Every project in LiquidText creates a document pane and infinite workspace. The document pane imports and contains all relevant documents, including live user annotations, highlites and connections. Notes, ideas, excerpts, images and connections are written, typed and/or placed on the workspace.\n\n\u003e LiquidText makes gathering notes and excerpts frictionless; users do it naturally, pulling out references as they read and dropping them on the workspace. LiquidText allows the user to organize the workspace as they prefer making notes and connecting them to others in the form of a list of notes and/or as mind maps.\n\n![[Pasted image 20210927161814.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Literate-programming-interface":{"title":"Literate programming interface","content":"","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/LogSeq":{"title":"LogSeq","content":"Authored by:: [[P- Brendan Langen]]\n\nLogseq is a hypertext enabled tool for knowledge workers that allows block-based referencing, a la [[Roam Research|Roam Research]]. Their aim is to be a privacy-first, open-source knowledge base, built in outliner form. \n\nLogseq visually looks like Roam, as well. A community of developers has begun building on advanced features into the ecosystem.\n\n![[Pasted image 20210916105759.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Mermaid-diagrams":{"title":"Mermaid diagrams","content":"Authored by:: [[P- Brendan Langen]]\n\nMermaid is a markdown syntax to generate diagrams, flowcharts, and other visualizations. This is a form of [[end-user programming]], as users can form their thoughts as a variety of visual processes. \n\nhttps://mermaid-js.github.io/mermaid/#/\n\n![[Pasted image 20210928164047.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Muse":{"title":"Muse","content":"Authored by:: [[P- Brendan Langen]]\n\niPad tool for thought created by [[Ink and Switch]]. Muse is a spatial canvas, with interactions specifically designed on the iPad. \n\nMuse allows annotations (or ink) on anything within a given board, and affords benefits of [[ZUI|zoomable interfaces]].\n\nhttps://museapp.com/\n\n![[Pasted image 20211007153804.png]]\n\n## A critique written by Rob from November 14th, 2020\n\n-   Okay, so I spent some time to git gud. I thought that I couldn't accurately judge it until I did that.\n    -   There's probably still a good amount of stuff that I'm not doing yet, especially stylistically, but they do onboarding through an instruction manual so I think I get it functionally at least.\n    -   Overall, it's cool, but it's just an interesting UX veneer on established concepts. Excerpts is cool though. Really, I just feel as though their main innovation is on stuff that doesn't matter to me.\n    -   The biggest problem is that it's essentially a file system with no good way to cross folder paths. It mixes drawing and personal knowledge management, but I don't think it's great for PKM.\n        -   Each board is both a folder and a file, and you can place boards within boards.\n        -   Each board is only as big as your iPad screen size. You can't zoom in or out at all to fit more information on the board.\n            -   Due to this limitation, if you want a board to contain more contents, you need to make new boards and refactor the information on your current boards into those smaller nested boards.\n                -   **The problem is that this just buries information.** Instead of having everything visible, it requires multiple taps to find what you're looking for.\n                -   Additionally, each board can only exist in one place and there's no way to embed pointers in other areas.\n                    -   For example, I was reading a chapter in a book about experiment design in political psychology:\n                        -   An observation that is reinforced at multiple points is that \"Awareness of being observed can change behavior.\" I have a board with that title. That claim originally came up in the context of me making arguments in a board called \"Against Lab Experiments,\" so it's nested within there.\n                        -   I have another board called \"Field Experiments.\" The book made the argument that a unique strength of field experiments can be that the participants are unaware that they are being observed by researchers. I want to be able to transclude my \"Awareness of being observed can change behavior\" board there so I can play around with those ideas in a different context.\n                        -   All that is allowed to me by Muse is one single path to \"Awareness of being observed can change behavior\" when already there should be two. I have to enter an exact sequence of boards to find the specific one that I'm looking for. I have to organize my boards according to a taxonomy rather than trains of thought.\n                        -   Roam is another Tool for Thought application that has shown possible solutions to these problems.\n                            -   Hyperlinks allow you to cross folder trees. They are wormholes between locations.\n                            -   block reference allow you to move ideas around nondestructively.\n                                -   \"Essentially, a block reference is a visual clone of the original block that you can move into new locations. If you change the text in the original block, it updates all of the block references as well.\" \"Block references link back to the original context. This allows you to cross folder trees.\"\n                                    -   Essentially, a block reference is a visual clone of the original block that you can move into new locations. If you change the text in the original block, it updates all of the block references as well.\n                                    -   Block references link back to the original context. This allows you to cross folder trees.\n                                    -   In Muse, I would love to be able to \"block reference\" the \"Awareness of being observed can change behavior\" into multiple locations, allowing the idea to proliferate and be discoverable in its appropriate contexts.\n                                        -   These block references would also allow me to nondestructively play with my boards. If each board is making a specific claim, then I want to be able to spread them out like notecards on a table and move them around. If I wanted to do this currently, I would need to remove the board from its original context.\n                                -   You can compare block references to copy paste. If you copy paste one idea into multiple locations and update the original idea, then every pasted instance stays the same unless you manually update it.\n    -   No map.\n        -   We've established that a person's Muse instance is going to be a whole set of nested boards. The only way to navigate between boards is to zoom in on one board, zoom in on another, etc,. For any serious amount of quantity, this creates a ton of steps to navigation. I have no idea how somebody would do it.\n            -   Just look at this example of me trying to navigate my thoughts around this one paper!\n            -   If we're going to go with nesting folders as the main information architecture, then we at least need to be able to visualize it.\n                -   Board titles could show a file path to give you a hint of what would happen if you zoom out.\n                -   We could have 2D Navigation like Mac Finder has\n                    -   ![](https://firebasestorage.googleapis.com/v0/b/firescript-577a2.appspot.com/o/imgs%2Fapp%2FRobAndHisNotes%2Fs9R0yTlpt1.png?alt=media\u0026token=fd4174e6-8a21-46e6-b4d0-b79e5e8fa400)\n                -   If we want spatial navigation to still be the primary way of moving around, then we could zoom out really far to see a bird's eye view of everything. The only level of zoom we can have at any point is at the level of a single board.\n        -   Alternatively, you can search for information, but focused search with a search bar is not enough.\n            -   \"Search Is Not Enough - Synergy Between Navigation and Search.¬†When websites prioritize search over navigation, users must invest cognitive effort to create queries and to deal with the weak implementations of site search. [https://www.nngroup.com/articles/search-not-enough/](https://www.nngroup.com/articles/search-not-enough/) search behavior Resource\"\n    -   Dumb UX things\n        -   I can't resize a selection, only boards and cards\n        -   I can't select and resize handwritten text\n        -   There's no duplicate or copy paste\n        -   Certain interactions are just weird. Pinch to zoom in and out is an established interaction that makes sense to people. Right now you do that to zoom in and out on boards, revealing how they are nested. But if I want to resize a card, I can't? I have to pull from the corner.\n        -   I have to manually select whether I'm inking or highlighting. There should be a gesture for this, right now it's inconsistent with the general modelessness of \"I'm touching the screen with one hand and writing with another to determine what I'm doing.\"\n        -   I just think that Concepts App has a little bit better of a UX for manipulation! I would base a Muse UX on the following\n            -   Use your finger to make a selection\n                -   Could be modified for Muse so if you tap a specific card then it automatically selects it, letting you move it around with the same ease that Muse allows currently\n            -   Use your Apple Pencil to draw\n                -   Still can use the same two handed operations for modelessness","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/My-tooling-gets-in-the-way-of-working-at-the-speed-of-thought":{"title":"My tooling gets in the way of working at the speed of thought","content":"Authored By:: [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\n\nStructural affordances in current tools conflict with our desire to work at the speed of thought.\n\nPeople want to work at the **speed of thought**, but current tools don‚Äôt allow for this to occur when one‚Äôs aim is to reuse and build off past thoughts. [[((9hBW8bOFa|*]]))\n\nIn current tools, structuring ideas in real-time is an extraneous task that __takes you out of the flow of the work__ you're doing. Often, people don't even know how to predict how they will reuse the note in the future! Deciding what to name something in the moment has a cost; people are removed from the current train of thought. In a file-folder format, deciding where to place a note adds another layer of friction. This occurs again when trying to retrieve past thoughts through search or block references.\n\nIf people have already developed elaborate systems, then the requirement to structure as you go can feel restrictive and stressful. For example, if I'm on my phone and want to capture an idea, but I have a highly structured system, then it will simply take longer to navigate to the correct locations and link to the correct pages because I went from 10 fingers to 2 thumbs.\n\nIf a tool doesn't have a great mobile version, this problem is exacerbated. We frequently heard from our interviews that quick capture of an idea on the go was vital to their process. If a tool doesn't have a great mobile version, this problem is exacerbated. We frequently heard from our interviews that quick capture of an idea on the go was vital to their process.\n\nBecause [[[It takes too much work to create structure](It takes too much work to create structure|structuring notes in the moment is costly]]), the design implications are that thought processors should either lower the cost of structuring or give users the ability to structure in hindsight.\n\nThose who avoid explicitly collating and naming ideas can work at the speed of thought and avoid premature convergence. They may prefer to specify relationships implicitly. Yet, if the tool is unable to recognize those relationships, this makes it harder to retrieve relevant materials to think through later, either with yourself or others. In these cases, our tools don‚Äôt let us easily refactor, leading to high friction in reifying our ideas. There also may be an upper limit on the complexity of unintentional structure people can create. [[((K191-xTMS|*]]))\n\nSome thought processors attempt to give their users **structure for free** by implicitly structuring the data from user behavior. These methods promise to make structuring ideas an intrinsic task. For example, outliner tools like Roam and Logseq embed implicit AND/OR relationships between blocks through indentation. Obsidian and other networked notebooks with wikilink autocompletion allow users to name and categorize ideas on the fly. Voiceliner allows you to signify the relative importance of notes by dragging your finger up and down the screen as you record. Jump creates a semantic graph in the background for you and is able to infer relationships and metadata to lighten the user's information entry requirements. [[((lHtBYbfDV|*]]))\n\nHowever, some users feel restricted by tools that implicitly infer structure from the way that users write because the design is necessarily opinionated. For example, one participant told us that Roam Research was too opinionated when she tried it. You need a course to use it properly and end up indoctrinated into the Roam way of thinking. Her way of thinking is different, so there was a consistent mismatch. In her words, she just wants to inundate her notes with crap but have it all searchable.\n\n Another participant told us that too much inferred structure from his tools slows him down because that would force him to think about structure. For example, Roam derives its structure from indentation and wikilinks. If he had to think about that while he was brainstorming, it would disrupt his flow. He far prefers the agnostic structure of Miro and its infinite canvas because he can \"structure\" by drawing without worrying about if it will fit properly into his \"database\" later.\n\nWe have yet to see affordances for easily structuring unstructured content in hindsight, but we can look to user behavior for ideas to solve this problem. For more, read [[I- Enable composable queries to facilitate structure in hindsight]] and explore its general context, as well as [[I- Replace the backlinks section of a page with a related items section]]. Generally, users can write search expressions that semantically describe what they're looking for, label those searches, and then functionally compose them in order to enable efficient aggregation going forward.\n\nOf course, there are problems of app performance, as well. Certain data structures have proven to be more resilient as scale increases. We won't touch extensively on this topic, but as users want to [[work at the speed of thought]], software that slows us down is a major drawback.\n\nTools for thought performance test at different graph sizes. \n\thttps://www.goedel.io/p/tft-performance-interim-results?r=14n5r4\u0026utm_campaign=post\u0026utm_medium=web\u0026s=r","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/NVivo":{"title":"NVivo","content":"Authored by:: [[P- Brendan Langen]] and [[P- Joel Chan]]\n\nNVivo assists with qualitative data analysis by identifying patterns in data and returning insights to the user. [[C- Scholars repurpose qualitative data analysis software to facilitate synthesis]].\n\n\n![[Pasted image 20210921165447.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Napkin":{"title":"Napkin","content":"Authored by:: [[P- Brendan Langen]]\n\nNapkin is built by Fabian Wittel and David Felsmann, and it employs a spatial canvas to help users traverse their thoughts and make spontaneous connections. \n\nWorking tour below, using the example of a public Napkin they built, working through Farnam Street podcasts. \n\n\n\n![[Napkin - Main Screen.png]]\n\nFocusing on a given tag shows any related ideas:\n![[Napkin - Tag Focus with Related Ideas.png]]\n\nCollection happens spatially, with all product use building around swarms of ideas. \n![[Napkin - Swarms of ideas forming a collection.png]]\n\nNapkin promotes retrieval of your ideas by surfacing related concepts and reminding you what you haven't seen recently. \n![[Napkin - Surfacing Related Concepts.png]]\n\n[[trace provenance]] in Napkin by hovering the source, which is required for any card - ![[Napkin - Source Provenance.png]]\n\nNavigation is entirely spatial, and while it doesn't allow for [[ZUI]], the experience feels like flying through a canvas. Napkin promotes exploration by showing notes like the one below: \n\n![[Napkin - Spatial Browsing + Islands.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Nextjournal":{"title":"Nextjournal","content":"Authored by:: [[P- Brendan Langen]]\n\nNextjournal is an example of a [[Literate programming interface]], as seen in [[R- clojureD 2021- Command and Conquer- Learnings from Decades of Code Editing by Philippa Markovics|this demo]]. Nextjournal uses a context-driven model that enables users around context-first thinking, via convenient UI abstraction, context-aware glossary of features, and a balance between easy to discover (mouse usage) and expert usage (keybindings, flows).\n\n%%[[Todos for Brendan - DONE]]%%\n\nContext is critical for displaying UI elements at the correct time, so Nextjournal provides users with a command bar at the bottom of each page, like this. \n![[Pasted image 20211217121037.png]]\n[[C- Tools for thought are popular when it feels like they get to know you better over time]], and Nextjournal aims to enable and foster an environment of power users. Below are the different contextual keybindings that are highlighted in a command bar, located at the bottom of each screen. \n![[Pasted image 20211217121152.png]]\n![[Pasted image 20211217121225.png]]\n![[Pasted image 20211217121241.png]]\n\nInformation is gathered across all of the states a user may be operating in.\n![[Pasted image 20211217120935.png]]\n\nOnce a keyboard shortcut is used, a pallette is generated with specific context on where you are: \nIn a rich text context, the focus:\n![[Pasted image 20211217121348.png]]\n\nIn a code editing context, keybindings will tie to the specific language you're writing in (i.e. Clojure will operate differently than Typescript).\n![[Pasted image 20211217121328.png]]\n\nThe overall feel is a tool that allows novices to gain a deeper understanding of their environment, while affording expert users with advanced functionality to improve their programming experience.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Notation3":{"title":"Notation3","content":"Authored by:: [[P- Brendan Langen]]\n\nNotation3 is a shorthand RDF model, designed for human readability, developed by [[P- Tim Berners-Lee]] and [[P- Dan Connolly]].\n\nhttps://www.w3.org/TeamSubmission/n3/\n\n\u003e The Resource Description Framework (RDF) is a general-purpose language for representing information in the Web.\n\u003e This document defines _Notation 3_ (also known as _N3_), an assertion and logic language which is a superset of RDF. N3 extends the RDF datamodel by adding formulae (literals which are graphs themselves), variables, logical implication, and functional predicates, as well as providing an textual syntax alternative to RDF/XML.","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Notational-Velocity":{"title":"Notational Velocity","content":"Authored by:: [[P- Brendan Langen]]\n\nNotational Velocity is a Mac OS [[Open source]] note storage and retrieval app based around advanced search functionality. In their model, the same interface is used for creating notes and searching, which enables related past thoughts to generate alongside typed content. \n\nNotational Velocity's structure implies an evergreen or permanent note taking structure similar to [[Zettelkasten]] or [[P- Andy Matuschak]]'s approaches.\n\nCreated by: [[P- Zachary Schneirov]]\n\n![[Pasted image 20210918112435.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Notion":{"title":"Notion","content":"Authored by:: [[P- Brendan Langen]]\n\nNotion is a block based DSL for file and relational database information entry and visualization.\n\nThe keywords and functions of Notion's language are executed through slash commands, which can essentially be thought of as autocomplete for common functions.\n\nNotion has the ability to embed other websites directly into blocks. As an application, it does not need to do everything because it is interoperable with other web applications. Here we see that people are able to access their REPLs from Replit directly from within Notion.\n\n![[Notion-Replit-Integration.gif]]\n\nhttps://www.notion.so/Intro-to-databases-fd8cd2d212f74c50954c11086d85997e#344dc1cf493b4c8aa16ade3f40e24f5a\n\nIn Notion, you have many different views of the same underlying relational databases. You can edit or view them as Tables, Calendars, Boards, Lists, Galleries, and Gantt Charts. This means Notion provides multiple structural editors for relational databases. ^f7c051\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-vLeXjO3aKU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Notional-Model-of-Sensemaking":{"title":"Notional Model of Sensemaking","content":"Authored by:: [[P- Brendan Langen]] and [[P- Joel Chan]]\n\nAs seen in [[R- The sensemaking process and leverage points for analyst technology]], the\n[[Notional Model of Sensemaking]] in intelligence analysis has a looping structure that loops both between and within foraging and sensemaking loops, and progressively increases in both structure and effort, starting from raw data sources and culminating in a synthesized set of hypotheses. \n\n![[Pasted image 20210928155724.png]]","lastmodified":"2022-04-29T18:04:26.933161704Z","tags":null},"/Obsidian":{"title":"Obsidian","content":"Authored by:: [[P- Brendan Langen]]\n\nObsidian is a networked hypertext notebook, in which this literature review is published. Obsidian has a strong community, growing rapidly from interested PKM folks, [[Roam Research| Roam Research]] expats, and . Obsidian focuses on local first storage, enabling a higher level of privacy/security than competitors like Roam. \n\nThe base form of files is .MD, which affords accelerated community development. [[C- End-user programming enables the developers to be lazy about their backlog of feature requests]]\n\n![[Pasted image 20210916112351.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Org-mode":{"title":"Org-mode","content":"Authored by:: [[P- Brendan Langen]]\n\nOrg-mode is a [GNU Emacs](https://www.gnu.org/software/emacs/ \"A Lisp Machine which masquerades as an editor\") major mode for convenient plain text markup ‚Äî and much more. It's designed for PKM and task management, as an open source system. \n\nhttps://orgmode.org/\n\nDeveloped in early 2000's, with focus on enabling reproducibility with literate programming patterns. Full system described in [[R- A Multi-Language Computing Environment]]\n\n![[Pasted image 20210916110008.png]]\n![[Pasted image 20210916110038.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Org-roam":{"title":"Org-roam","content":"Authored by:: [[P- Brendan Langen]]\n\nOrg-roam is a major mod on top of [[Org-mode|Org-mode]], with a goal of creating a Zettelkasten, but finding the vanilla version wasn't enough. Org-roam attempts to replicate [[Roam Research]] in the Org-mode format.\n\nThis speaks to the [[Hackers]] culture of modifying tools to fit personal uses, but it's expanded beyond, with over 3800 'stars' on Github as of 2021-09-15.\n\nhttps://blog.jethro.dev/posts/introducing_org_roam/\n\n![[Pasted image 20210915134459.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Pollen":{"title":"Pollen","content":"Authored By:: \n\nPollen is a domain-specific language written in Racket that lets you [tag information with functions](https://docs.racket-lang.org/pollen/third-tutorial.html#%28part._.Tags___tag_functions%29). So, ‚óäem{text} will apply a function that applies the \"italicize\" to \"text\" as an argument. For a basic overview, [see this presentation](https://www.youtube.com/watch?v=IMz09jYOgoc).","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Programmable-text-interfaces-are-the-future":{"title":"Programmable text interfaces are the future","content":"Authored By:: [[P- Rob Haisfield]]            \n\n# **Programmable text interfaces are the future, not GUIs**\n\nPeople who don‚Äôt code are accustomed to interacting with apps with Graphical User Interfaces (GUI) [^1]. In order to give instructions to a GUI app, users need to click on buttons/menu items, click-and-drag blocks, and write in text boxes. GUIs are the dominant interaction design paradigm for non-coders [^2].\n\nWithout code, people need to be comfortable with whatever pre-existing features they can find, and if they want something custom, they will need to hire a coder or use a graphical no-code tool that will ultimately require them to use the same coding concepts.\n\nCoders will open a text file with an Integrated Development Environment (IDE) [^3]. Their IDE will provide helpful features (graphical or textual) to debug, refactor, and generally support writing more functional code. Coders give software instructions by writing in text what they want. Generally, code is flexible enough that they can make it do anything they want.\n\nWhile working on the onboarding for GuidedTrack [^4], I began to think‚Ä¶ What if people could interact with apps like coders interact with their programs? What is the difference between clicking a button to call a function and writing code to call a function? **In the future of text, I foresee programmable text interfaces with custom IDEs replacing graphical applications.**\n\nGuidedTrack [^5] is a simple low-code application that allows you to make surveys, experiments, web applications, online courses, signup forms, and more. While the use cases are broad, here I will primarily focus on the form builder side of it for simplicity. As one of my projects with Spark Wave [^6], GuidedTrack is the best example I know of a textual interface, so I‚Äôll dive into it and extract takeaways as I go.\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image002.jpg)\n\n**The keywords are direct and domain-specific.** If you were to describe a survey in an email that you send to a collaborator, how would you do it? That‚Äôs not going to be far off from how it looks in GuidedTrack. This makes it feel like a **_textual interface_** for an app people are already familiar with. **Users write their instructions with text at the level of abstraction they care about.**\n\nStraightforward and direct language design is crucial. This quote from A Small Matter of Programming [^7] stuck out to me: \"A mathematician, in a broad sense, already knows Mathematica.\" Wolfram Mathematica formally encodes pre-existing mental models / notation into a syntax that can be used for computing.\n\nEach line represents a function (marked by the keyword at the beginning of the line), and relationships are conveyed through indentation. In order to add a caption to an *image, you indent a caption under the *image. In order to ask a follow-up *question, you indent the follow-up underneath specific answers, which are indented under the question. Saving responses to use for later is also done through indentation. **The syntax is simple.**\n\nIn user research, we found that non-coders often believe that in order to write code, they need to spend significant time reading documentation upfront. However, in GuidedTrack we have a toolbar filled with forms that enable you to write code through a graphical interface. All the user needs to do is fill in the blanks, toggle options on or off, and select options from menus. **The toolbar enables users to learn as they go and write code before they know how.** This is more or less equivalent to the graphical interfaces people are used to in Google Forms, but the difference is that once you get used to it you can just type.\n\nFor example, in this image, we see a form for writing a question. This multiselect checkbox type question will save the answers to a variable labeled `participantSubscriptions.` Later, these saved answers can be referenced in a **conditional** (e.g. \"if Netflix in participantSubscriptions, ask this question\") or a **loop** (e.g. \"Ask the same followup question about each of the answers they selected\"). There are forms for those as well!\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image004.jpg)\n\n**_Loops_** **and _conditionals_ fall under the broader category of ‚Äúcontrol flow.‚Äù** By default, content (text, questions, charts, images, etc.) are read as instructions, flowing top to bottom. If that feels restrictive, loops and conditionals can declare other rules. A new user can learn how to replicate Google Forms‚Äô functionality in 10-15 minutes without requiring control flow. However, upon learning to use control flow, they will not want to return to the limitations of GUI alternatives.\n\n**Simply adding variables and control flow to a form builder gives people the ability to create their own functionality. Users don‚Äôt need to wait for developers to implement a specific feature.**\n\nOur competitors will advertise that they can do calculations as though that is a noteworthy feature! These calculations are used to score users' responses (in a quiz, for example). In GuidedTrack, calculations are emergent from the way saved variables work. In the case of a quiz, it would look something like: `totalScore = totalScore + lastAnswerScore` after each question.\n\nAnother example: an alternative form builder, Tripetto, is able to take the above question and ask how long the respondent was subscribed to each of the streaming services. The developers of Tripetto needed to specifically design that feature. It takes 20+ clicks (besides typing) and ~3 minutes to do it. That will never get faster.\n\nGuidedTrack doesn‚Äôt have specific functionality for this. We don‚Äôt have a long set of steps. However, control flow makes it possible in 15 lines of code. Most of that code is the same text Tripetto users would have to write anyway. Although it is more advanced than what beginners will need or know how to do [^8], many serious knowledge workers, like course creators or PhD researchers, will need a tool that can scale with their changing goals over the course of a whole career. **GuidedTrack, as programmable text, can handle the increasing demands of users with changing goals** [^9]**. The feedback loops** [^10] **built into the design of its editor enable users to increase their skills as they go** [^11]**.**\n\n**Textual interfaces are as fast as typing.** If writing a question, its answers, and the loop with the follow-up question is 60 words, then it will take you 1-1.5 minutes. **When the syntax feels natural, creating feels like writing.** Most people who use computers know how to type, and have had to use Google or Word documents. The keyboard shortcuts people are familiar with (command-a to select all, command-c to copy, command-v to paste, etc.) all work in a text editor because text editors have worked this all out already! If you try to copy/paste multiple questions at a time in a graphical application like Typeform, you can‚Äôt. If you try to undo an accidental change with command-z, you can‚Äôt. **Graphical applications have to specifically build keyboard shortcuts that text editors can do by default.**\n\nOftentimes, writing and reading is simply more pleasant than dragging and dropping. **Text is incredibly information dense.** Look at the difference between the same survey in GuidedTrack vs. Tripetto. With Tripetto, you would need a massive screen to work with a long survey!\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image006.jpg)\n\n_![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image008.jpg)_\n\nA key problem that confronts domain specific languages attempting to replace standard graphical applications is that they can be intimidating to non-coders. **People who don‚Äôt know how to code will look at anything that looks remotely like code as something that is ‚Äúfor coders.‚Äù** They assume that programming anything requires years of learning and prior experience. For the most part, they are not wrong. The sort of work you hire developers to do often does require specific knowledge.\n\nHowever, we are not trying to be a general purpose programming language like Python or JavaScript that can write anything. We‚Äôre just trying to replace a creation-oriented application with programmable text and a custom IDE. If you have to make a programming language that only makes surveys and experiments, it does not need to be complex. Let‚Äôs say that again more broadly: **If you have to make a programming language that only does ______, it does not need to be complex.**\n\n**Non-coders don‚Äôt need to think about deployment or backend boilerplate.** In order to send the program to someone, they only need to send a link. The program doesn‚Äôt require any code to save all of the responses to a spreadsheet, because why should someone trying to write research have to think of that? All of this complexity is abstracted away for our end users.\n\n**User research clearly demonstrated that novice users felt more comfortable when they could look at code and predict what it would do.** Obviously, that meant we needed users to see simple programs upfront. Unfortunately, we also learned that too many code comments to explain the code actually made code scarier! It is as though that sent the signal that there was more to explain.\n\nOur solution here was to implement a ‚Äúsplit view.‚Äù In the split view, we show users what code _(on the left)_ is actively producing what is displayed in the preview _(on the right)_. Originally, you would need to read code first and then view the preview. With the split view, instead of requiring users to read code and then preview it, they can do both at the same time. This tightened the feedback loop dramatically and enabled us to remove most code comments as they became unnecessary [^12]. Further usability tests were like night and day - we were far less likely to hear the ‚ÄúI‚Äôm not a coder‚Äù protest. **Legibility is key, and the simple design of the language is complemented by the IDE‚Äôs design.**\n\nIn HCI research, the split view is sort of like a live programming environment, in Bret Victor‚Äôs terms [^13]. We still have substantial work here to improve the experience, but for more, Sketch-n-Sketch [^14] and their research represents the state of the art.\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image010.jpg)\n\nTo sum up, here is what we have so far that can be generalized beyond GuidedTrack:\n\n‚óè The familiarity and speed of text\n\n‚óè The user delivers instructions through text instead of buttons\n\n‚óè Powerful programming concepts like variables and control flows to unlock customized use cases\n\n‚óè Boilerplate code is abstracted away so the user can focus on creation within their domain\n\n‚óè Strong cognitive scaffolding (via graphics or other means) to make sure that it is approachable and people learn as they go\n\n# What other graphical applications could have a programmable text as an interface?\n\nGuidedTrack is awesome, but the point of this piece is to show a new kind of application design. There is no shortage of possibilities here. In no particular order:\n\n1.  **Task managers and schedules.** What better way to express that starting one task depends on finishing another than writing a _conditional_ if-then statement? Isn't a repeating event just an event on a _loop_ until it‚Äôs canceled? Isn‚Äôt it nice to be able to write your todos as though they were on a notepad as opposed to _navigating through a GUI_? With a text editor, it would be easy to copy/paste a selection of tasks to move them into another project. With conditionals, you could create an event that only occurs if half the invitees RSVP yes. This would be more about primitive design than feature design.\n2.  **Diagrams and flowcharts.** See Flowchart.fun [^15] to see how indentation and notation can make flowcharts easy. In order to be more aligned with how I'm looking at it, it would require some level of programmatic control on top of the boxes, lines, and sets of boxes and lines.\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image012.jpg)\n\n3.  **Configuration files.** With most graphical applications, if I‚Äôm using them on multiple computers or across multiple accounts, I will need to manually change the settings each time. If settings were run through text, it's easy to transport through copy/paste.\n4.  **Personal finance.** Many people do this with custom spreadsheets [^16]. You could also do this with a domain-specific language, it might look something like the image from Andrew Blinn [^17] or the pseudocode below. Notice how specific the functions are - there‚Äôs no boilerplate for users, so they can focus on providing instructions.\n\n```clojure\n(when (true? (unpaidInvoice? today))\n\n (if (\u003e paymentFund (value unpaidInvoice))\n\n (sendFund (value unpaidInvoice) USDC John Doe)\n\n :else (sendMessage Me (str \"check the payment fund, there isn't enough in it for John Doe\"))))\n ```\n\n5.  **Discourse/knowledge graph database entry, retrieval, and visualization.** This is one subject of my research with The Graph [^18].\n6.  **Slideshows.** The Racket lang Slides [^19] demonstrate this. With programmability, an editor could change the background image and font on multiple slides at once, or turn it into a choose your own adventure, HyperCard style [^20].\n\n![](file:////Users/roberthaisfield/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image014.jpg)\n\n# The future is programmable text, not graphical applications\n\nMost people are accustomed to graphical interfaces. Those are fine for basic use cases, but as user goals become more advanced, graphics alone will not be enough. This is where programmable text comes in.\n\nText is fast, as fast as we can type. Text can express complicated control flow concepts and abstract repetitive processes to create functionality that the app's designer would never conceive of on their own. Thus, it‚Äôs more about the design of primitives than features. Our job as designers is to make sure people can predict the outcome of their code through communicative feedback loops [^21] and examples they can build on. Clear documentation and graphical scaffolding can help them begin. In order to create a powerful application with a low floor, wide walls, and high ceiling [^22], it is important to think about how people can learn as they go through. Graphics can help people get started, but text will take applications and their users to the next level. If the language is simple, creation will feel like writing. \n\nReferences\n\n[^1]: Wikimedia Foundation. (2021, September 26). _Graphical user interface_. Wikipedia. Retrieved from https://en.wikipedia.org/wiki/Graphical_user_interface.\n\n[^2]: Angert, T., \u0026 Elkammash, M. (2020, March 5). _CLUI: Building a graphical command line_. Replit Blog. Retrieved from https://blog.replit.com/clui.\n\n[^3]: Wikimedia Foundation. (2021, September 29). _Integrated development environment_. Wikipedia. Retrieved from https://en.wikipedia.org/wiki/Integrated_development_environment#:~:text=An%20integrated%20development%20environment%20(IDE,automation%20tools%20and%20a%20debugger.\n\n[^4]: Haisfield, R. (2020). _GuidedTrack_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/guidedtrack.\n\n[^5]: GuidedTrack. (2020). Retrieved from https://www.guidedtrack.com/.\n\n[^6]: _We create software companies to solve important problems._ Spark Wave. (2021). Retrieved from https://www.sparkwave.tech/.\n\n[^7]: Nardi, B. (1995) _A Small Matter of Programming: Perspectives on End User Computing_. Retrieved from https://scattered-thoughts.net/blog/2016/06/17/notes-on-a-small-matter-of-programming-perspectives-on-end-user-computing/\n\n[^8]: Haisfield, R. (2020). _New users do not yet have the vocabulary to understand the app_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/new-users-do-not-yet-have-the-vocabulary-to-understand-the-app.\n\n[^9]: Haisfield, R. (2020). _User goals change over time_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/user-goals-change-over-time.\n\n[^10]: Haisfield, R. (2020). _Feedback loops are a more efficient method of communication_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/feedback-loops-are-a-more-efficient-method-of-communication.\n\n[^11]: Haisfield, R. (2020). _User skill level increases over time_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/user-skill-level-increases-over-time.\n\n[^12]: Haisfield, R. (2020). _Feedback loops are a more efficient method of communication_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/feedback-loops-are-a-more-efficient-method-of-communication.\n\n[^13]: Victor, B. (2012, September). _Learnable Programming - Designing a programming system for understanding programs_. Learnable Programming. Retrieved from http://worrydream.com/LearnableProgramming/.\n\n[^14]: Ravi Chugh. (2021). _Fun, Funky, Functional: The Pursuit of Better User Interfaces for Programming_. Retrieved from https://www.youtube.com/watch?v=1gGd7pKSpRM.\n\n[^15]: _flowchart.fun_. Flowchart Fun - Online text to flowchart creator. (2021). Retrieved from https://flowchart.fun/.\n\n[^16]: Kryptik. (2021). _Portfolio tracker by Kryptik_. Portfolio Tracking Template. Retrieved from https://docs.google.com/spreadsheets/d/1qYLOAjzaIIcFLFw_j-P4yH0oOhYdy-CcmBItEc6--50/edit#gid=464576501.\n\n[^17]: Blinn, A. (2021, September 16). _Twitter Reply re: Programmable Transactions_. Twitter. Retrieved from https://twitter.com/disconcision/status/1438302534649667590.\n\n[^18]: Haisfield, R. (2021, July 13). _Twitter Announcement - Research with The Graph_. Twitter. Retrieved from https://twitter.com/RobertHaisfield/status/1415041842064756737?s=20.\n\n[^19]: Takikawa, A. (2018, March 31). _Making the Most of #lang Slideshow_. Asumu. Retrieved from https://www.asumu.xyz/blog/2018/03/31/making-the-most-of-lang-slideshow/.\n\n[^20]: Wikimedia Foundation. (2021, September 27). _HyperCard_. Wikipedia. Retrieved from https://en.wikipedia.org/wiki/HyperCard#:~:text=HyperCard%20is%20a%20software%20application,flexible%2C%20user%2Dmodifiable%20interface.\n\n[^21]: Haisfield, R. (2020). _Continuous onboarding_. Rob's Hypertext Notebook. Retrieved from https://robhaisfield.com/notes/continuous-onboarding.\n\n[^22]: Brander, G. (2021). _Low floor, wide walls, high ceiling_. Gordon Brander. Retrieved from https://gordonbrander.com/pattern/low-floor-wide-walls-high-ceiling/.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Project-Description":{"title":"Project Description","content":"We‚Äôre looking to answer a few key questions in our research:\n\n-   Which data structures would allow individuals to incorporate their personal knowledge into a decentralized knowledge graph?\n-   Which behaviors would the interface need to facilitate in order to integrate and maximize the accessibility and iterability of knowledge?\n-   How can we build upon implicit metadata for a frictionless user experience?\n\nMuch of the data on the web is unstructured or poorly structured. While there may be agreed-upon schemas under which people operate, it‚Äôs [a challenge to get users to input metadata](https://people.well.com/user/doctorow/metacrap.htm) in a consistent way. These pre-existing structures are implicit metadata ‚Äî the significance of which is revealed through user behavior. For example, the number of times a paper has been cited acts as an implicit measure of support for that particular paper. However, these citation counts miss critical information about whether citing authors supported or opposed the findings, or how claims in the paper play into the area of the discourse graph that authors are to contribute to. If we can identify and understand the rationale behind these agreed-upon structures, we can build upon them in a way that does not feel intrusive to the user and allows them to maximize their potential.\n\nCould the interface to the knowledge graph support positive user behaviors? For example, Twitter's 280-character limit promotes knowledge compression and unqualified hot takes. We first hope to understand how this would impact an individual user, but a more interesting question comes from the potential of this strategy to disrupt how we conceptualize data and iterate on a global knowledge base. The current body of research is [limited by its inability to be queried and updated](https://drive.google.com/file/d/1yjTjcIVqttXEA2NXKQ75D8iHGTOxiEj4/view). Nearly every graduate student has completed a review of the literature at some point, but their labor will likely go unrecognized unless it is published by a journal, leaving future researchers to start at the beginning. Can we create a decentralized knowledge graph that encourages synthesis through its design? Can this be developed while still maintaining an individual user‚Äôs privacy?\n\nOur success will be measured by our ability to accurately map out the space, utilize prior research, and understand the techniques and strategies employed by professional knowledge workers and those building tools for thought. We seek to gain an understanding of how implicit metadata already plays a role in these systems, and understand the strategies and searches that underlie these decisions. In the long term, we hope our research will be used in the creation of a collaborative, decentralized knowledge graph.\n\n[[Project success metrics]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Project-Mission-and-Impact":{"title":"Project Mission and Impact","content":"**\n\nThrough our research, we plan to generate insights and questions that enable the creation of decentralized tools for networked thought that improve the thinking of all participants. We hope to connect the research and knowledge of academics and practitioners across disciplines and professions, fueling interdisciplinary synthesis the likes of which the world has never seen before. In doing so, we will fight against the trend of technological discourse software that overwhelms us with noise we can't even trust and leaves us fried as we mindlessly scroll through it.\n\nOver the last three years of my (Rob Haisfield) career [in applied behavioral science, I have learned a ton](https://robhaisfield.com/notes/hyper-learning). Most of this learning came from reading papers and working with clients, and it has all gone into my personal notebooks. One of the most important realizations I have had as a practitioner is that the findings from academic research don't always map 1-1 with what works in practice. I have learned the boundary conditions of various theories and synthesized my own through attempting to apply the theory to real life, across multiple situations.\n\nHere's the thing: it's not just me. Every practitioner is learning a lot through their work, connecting the dots. Many of them use a personal knowledge management system in some form or another. Practitioners don't have a proper feedback loop to update the academic knowledge base, and barely even talk to each other. What would happen if we unleash the knowledge of individuals and groups into a decentralized knowledge graph built to facilitate synthesis? How can that technology and behavior be actualized? How can we [[R- Accelerating Scientific Discovery by Lowering Barriers to User-Generated Synthesis of Scientific Literature|lower the barrier to access, contribute, and arrange research?]] What structure can make knowledge graphs interoperable across fields of study and professions, and what will be necessarily domain-specific?\n\nThis is not a new mission. The semantic web has long eluded us, [largely due to problems of human behavior](https://people.well.com/user/doctorow/metacrap.htm). If we are to create a decentralized knowledge graph, we have to figure out a structure that doesn't break if individual people don't manually tag information consistently and honestly. In order for this to work, we need to figure out the right implicit metadata, and in order to do that we need to learn how people interact with knowledge graphs today. What behavioral conventions are necessary to create and maintain a decentralized knowledge graph at different scales so the edges and nodes are composable and able to propagate changes? We aim to learn what [[Q- What is the data structure of a graph built to facilitate decentralized knowledge synthesis|data structures and interfaces can facilitate]] people in this necessary knowledge work.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Project-success-metrics":{"title":"Project success metrics","content":"-   Success:\n    -   Research paper\n    -   Increased knowledge\n\n\n- What the project looks like:\n    - reading papers [desk research](app://obsidian.md/desk%20research)\n    - [participant observation](app://obsidian.md/participant%20observation) by working with social knowledge management communities\n    - [user interview](app://obsidian.md/user%20interview)s\n    - Synthesis and public hypertext wiki\n\n\n- Problem being solved:\n    - People need an interface to input information into the knowledge graph such that it is [GraphQL](app://obsidian.md/GraphQL) queryable\n    - People need to be able to develop their thoughts personally and collectively, at different scales\n    - The right balance between unstructured and structured knowledge must be discovered","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Readwise":{"title":"Readwise","content":"Authored by:: [[P- Brendan Langen]]\n\nReadwise is a product that allows users to extract book and journal highlights into one place. They integrate with ebook platforms, read-it-later apps, and photos to collect annotations in one place. \n\nThis enables readers to engage in progressive summarization, as [[Z- People process complex information in multiple levels and stages of processing|people process complex information in multiple levels and stages of processing]]\n\nAs [[C- Synthesis is supported by Active Reading]],  [[Extended Universe/C- Incrementally processing notes is a key user behavior to promote synthesis|Incrementally processing notes is a key user behavior to promote synthesis]]. \n\nAnnounced in September 2021, they are releasing their own reading app to enable read-it-later functionality within the tool. \n\nIn our research, we are asking: [[Q- How might a discourse graph be designed to support incremental formalization]] and [[Q- How can people maintain a decentralized discourse graph with a high quantity of stuff in it]]? Because [[C- Curation is an important role in maintaining a decentralized discourse graph]], Readwise's design may provide insights. \n\n![[Pasted image 20210915132018.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Research-Grant-Application":{"title":"Research Grant Application","content":"[[Project Description]]\n\n[[Project success metrics]]\n\n[[Project Mission and Impact]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Roam-Research":{"title":"Roam Research","content":"Authored by:: [[P- Brendan Langen]]\n\nRoam Research is a prominently used networked tool for thought. Roam's early community connected many from the PKM, academic, and hacker spaces, who have built out an ecosystem of workflows and extensions alongside the platform. [[R- Roam can loosely be considered a DSL with a structural editor]] atop its Clojure base. \n\nRoam's aim is to augment collective intelligence over a long (50 years) time horizon, which has led to delays in desired user-facing updates. This has caused some early users to seek alternatives, and a spring of open source and alternative hypertext tools have arisen as competitors. \n\nco-founded by [[P- Conor White-Sullivan]] \nlink:: https://roamresearch.com/\n\n![[Pasted image 20210916111704.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Saga":{"title":"Saga","content":"Authored by:: [[P- Brendan Langen]]\n\nSaga is a document editor that aims to help you organize your knowledge quickly. Saga enables automatic linking and always-on background search to help users connect their knowledge - alone or in teams. \n\nCo-created by [[P- Filip Stanev]] - https://saga.so/?r=0\n\n![[Pasted image 20210915125220.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Search-Behavior":{"title":"Search Behavior","content":"Authored By:: [[P- Rob Haisfield]]\n\nWhen people are under conditions of uncertainty, how do they increase their certainty?\n\nSearch behavior tends to fall into a few main categories that exist on a spectrum: information retrieval, focused search, exploratory search, exploratory browsing. ^s9cygv\n\nWith information retrieval, you know what you're looking for and where to find it. A search bar or folder system works great in this situation.\n\nWith focused search, you know what you're looking for but not where to find it.\n\nWith exploratory search, you know where to find something but you can't quite articulate what it is you're looking for. This is what I design my digital garden for.\n\nWith exploratory browsing, people aren't searching for anything in particular, they're just consuming information.\n\nThere are two main theories of search behavior. [Information foraging theory and Berrypicking](https://doi.org/10.1177%2F0165551517713168). ^5Frct7\n\nIt's important to think about the lens parameters: how likely is the person to know what they are looking for or where to find it? How transparent are things?\n\n## Berrypicking\nBerrypicking is modeled off of the author's experience picking berries on vacation. People meander from information patch to information patch, and they have many different possible search paths.\n\n**Critically, as people learn a new domain, their questions evolve.** One of the most important things for a searcher is that they learn the right questions to ask as they uncover more information.\n\n- They can store resources for later.\n- They can look into the future of an idea by seeing which papers cite it.\n- They can read the literature review and citations to see how the idea was built and where it fits into the broader landscape of the theory.\n- They can ask for help from others\n\nPeople have many different strategies for searching for information, and they flexibly switch between them as demanded by the situation.\n\n## Information Foraging Theory\nInformation foraging theory is more pragmatic than Berrypicking. Every search for information begins with a goal. People follow an **information scent,** which gets stronger as people approach their goal. It's almost like a hunt. ^3iAusd\n\nThis is based on optimal foraging theory, so people will explore a \"patch\" of information, and based on how much friction there is to move on to the next patch weighed against the probability that a patch of information contains what they're looking for, they'll move on or dive deeper.\n\nIn my hypertext notebook, I try to title my notes in such a way that there's a high **information scent** to help people determine whether to click on the link or not. I'm planning on implementing hover previews as well in order to reduce the friction to click on a page to open it up.\n\nSome extended sections of the research point to the fact that people will find information faster if they have help from others. Experts can help beginners learn the vocabulary of the domain. *For more detail, see [[R- Information Foraging Video#^OPpY9M]]*","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Semilattice":{"title":"Semilattice","content":"Authored by:: [[P- Brendan Langen]]\n\nOperating System concept design inspired by [[Roam Research]] and [[Muse]]. Semilattice can be seen as a series of interactions and systemic concepts on top of personal knowledge management (PKM) tools. The system is block-based, with a card structure that consists of multiple lists of blocks and drawings. Each block and card can have a networked relationship, and can have multiple parents and children.\n\nSemilattice is designed to improve information processing in existing PKM tools, specifically web-based research problems. \n\nSee: [[Search Behavior]]\n\nhttps://www.semilattice.xyz/\n\nDesigned by [[P- Aosheng Ran]], with a design spec [here](https://www.aoshengran.com/blog/semilattice-problem-complex) and video demonstration [here](https://youtu.be/7MeeCeTXOyo?t=103).\n\n\n\n![[Pasted image 20211007153705.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Spaced-repetition-systems":{"title":"Spaced repetition systems","content":"","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Standoff-Annotation":{"title":"Standoff Annotation","content":"Authored By: [[P- Brendan Langen]]\n\n\n[[P- Iian Neill]]'s goal with [[Codex OS]] is to build a system for *relation* - the principle of relatedness or [[sensemaking]]. To achieve this, he uses a modified data structure called standoff annotation, which allows information to respect multiple interpretations. \n\nThis concept carries a ton of implications, but namely that an entity can be defined and connected in multiple\n\nMost databases require an entity to carry the same relationship across the entirety of the database. This causes inherent challenges in extending knowledge across domain boundaries, as entities often carry different definitions - and thus, relationships. \n\nCodex OS is designed to enable users to frame things in multiple ways (or layers) without breaking the structure of their graph. \n\nStandoff annotation allows users to annotate atop an entity, which is stored separately from the text, yet still retains the relationship to the initial text.\nhttps://github.com/argimenes/standoff-properties-editor\n\n\u003e A standoff property is a property that 'stands off' from the text it refers to, that is stored apart from the text source.\n\u003e A property in this context is a data structure that represents a range of characters in the text along with information relevant to the annotation, such as the annotation type. Annotations can be of any type, e.g. stylistic (italics; bold; underline), semantic (line; paragraph; page), or linked entities (database record; URL).\n\n\u003e XML does not cope well with [overlapping annotations](https://en.wikipedia.org/wiki/Overlapping_markup). This is because the tree structure of XML mandates that an overlapping annotation (two or more annotations that overlap the same text sequence) cross one or more branches of that tree structure.\n\u003e These problems disappear, however, if the text and its annotation properties are kept entirely separate. The text, then, is stored in a raw or unformatted state, annotated by a collection of discrete standoff properties.\n\nTechnical challenges from standoff properties can be mitigated by creating linked-list data structures.\n\n\u003e The technical challenge posed by standoff properties is that they require indexes to link annotations to the words in the text, which suggests that the text cannot be changed without breaking the annotations. However, by using a linked list-style structure composed of SPANs it is possible to create properties that reference characters by pointers, allowing text to be freely inserted or deleted without breaking the annotations. Indexes are only calculated at the end of the session, when the annotated text is to be exported (and presumably saved).\n\n[[P- Iian Neill]] suggests that since machine generated annotations could enable a wealth of annotations, a layering structure can act as a focusing frame. \n\n\u003e As there is no defined limit on the number or types of annotations that can be added to a text, there is the chance that texts may become visually cluttered with annotations. To address this, there is an option to assign a user-defined 'layer' to an annotation for the purpose of grouping them. Layers can be shown and hidden at will, thus reducing clutter. This is particularly helpful when it comes to computer-generated annotations, such as syntactic or semantic annotations created by an NLP library or other text analysis tools.\n\nAdding a graph database atop standoff properties affords compounding benefits.\n\n\u003e While standoff properties can be stored in any format storing them as LOD entities in a graph database vastly increases their potential. For example, if you were searching for all references to a person you would not only find the texts but the exact character positions in the text. If you expanded your query from a person like Leonardo da Vinci, say, to all artists you could see every instance an artist is mentioned in any text\n\u003e Queries could also be combined across annotation types. For example, if you had the syntax tree of a text you could find every occurence of a term within a given syntactical unit. The more annotation types you record, the greater the number of text mining options become available.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Start-Here":{"title":"Start Here","content":"Welcome to the decentralized discourse graph hypertext notebook. This notebook will continue to evolve over the course of the entire project and is by no means a finished product.\n\n**All you need to do is click on what is interesting.** This is a special trait of this website - hypertext notebooks are designed for exploratory browsing. In a linear piece of writing, all ideas would be sequenced into one narrative. In hypertext writing, the narrative is emergent and the ideas are associative. It is like a book where the pages rearrange themselves for you based on your current curiosity each time you revisit. *For more on what this is, see [[Q- What is a hypertext notebook]]?* ^0Q4ntx\n\nThe goal of this research project is to find data structures and interfaces that support synthesis and innovation in a decentralized discourse graph. *See: [[Q- What is a decentralized discourse graph]]*\n\nSome suggested starting points:\n- For broader context about what we are doing:\n\t- [[C- Discourse graphs could significantly accelerate human synthesis work]]\n\t- [[Q- What is a decentralized discourse graph]]\n\t- [[Research Grant Application]]\n- To begin with key questions:\n\t- [[Q- What user behaviors are people doing already that imply structure that is not being instantiated into a literal structure]]\n\t- [[Q- What are powerful interfaces for entering information into a discourse graph]]\n\t- [[Q- What are powerful primitives for a user of a decentralized knowledge graph]]\n- To jump straight into the ideas:\n\t- [[content/garden/LitReview/I- Search as a part of the primitive design]]\n\t- [[I- A DSL for a discourse graph with information entry, visualization, and retrieval]]\n\n- Some specific how-tos:\n\t- Hover your mouse over a link to see a preview of its content\n\t- If a page is empty, look through its backlinks! If a page isn't empty... you can still look through its backlinks! Those are all of the times where the ideas presented in the page were used in context.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Synthesis-is-hard-to-do-with-people-who-dont-share-context-with-you":{"title":"Synthesis is hard to do with people who don‚Äôt share context with you","content":"Authored By::  [[P- Joel Chan]], [[P- Rob Haisfield]], [[P- Brendan Langen]]\n\nAn exciting hypothesis that motivates our work is that making discourse graphs widely available could accelerate human synthesis work, and thereby accelerate innovation and scientific discovery. [[../LitReview/Main/C- Effective synthesis is necessary for innovation and scientific progress.md|C- Effective synthesis is necessary for innovation and scientific progress]]. Yet, our first challenge is to enable people to perform distributed synthesis. For many people, this is a challenge!\n\n## Synthesis typically occurs in one mind\n\nSynthesis involves individuals putting together many pieces in their minds, but It is often argued that [synthesis occurs in a single mind](https://notes.andymatuschak.org/Great_creative_work_is_usually_the_product_of_a_single_person). In our research, surprisingly few participants had distributed synthesis experiences to share. Why?  [[((9LwW0ZobI|*]]))\n\nIn the early stages of synthesis, when people have [[half-baked ideas not ready yet]], they prefer to work on their own or with a close companion. \n\nFor most people, the primary concern is speed. If you are working with someone who has no shared background, you need to spend time explaining the basics - of the topic, your goals, and your working process - to them. \n\nAs [[P- Ryan Singer]] describes in Shape Up, the most efficient synthesis occurs when you can cover a breadth of topics quickly. This can only happen if you are able to leave out details as you go. When you are on your own or with a trusted collaborator with shared context, you do not need to re-explain things you already understand, using a \"shorthand\" instead.\n\nFirst, we need to have the right people‚Äîor nobody‚Äîin the room. Either we‚Äôre working alone or with a trusted partner who can keep pace with us. Someone we can speak with in shorthand, who has the same background knowledge, and who we can be frank with as we jump between ideas.\n\nHere, the primary concern is being able to [[work at the speed of thought]]. Bringing someone else up to speed - especially someone with a [[lack of shared context]] - slows the process down and reduces the chances of advancing beyond the basics.  \n\nThis lack of shared context makes it difficult to divide the work of synthesis collaboratively. \n\t- [[B1]] gave an example from his own experience where he was working on a knowledge graph project with people who did not have a background in knowledge graphs. They had 10 sources and divided them up so each person would look at different sources and take notes on them. When [[B1]] read his sources, he took notes in the context of what was relevant to the project, whereas his collaborators would write summaries of the entire sources. They did not fully understand the driving questions and history of the space, so they had no filter for relevance.\n\t- [[R2]] mentioned that when he reads a paper, he only takes notes on what is relevant for his current projects. While he does have rigorous processes for taking notes on a particularly juicy paper, he finds that often [[C- It is difficult to predict whether structure now will be worthwhile later]].Thus, we see that **shared context** is critical to distributed synthesis. When multiple people share context, they can advance their collective understanding of the topic through conversation and standardized processes and conventions\n\n## Shared context is critical to distributed synthesis\n\nThus, we see that **shared context** is critical to distributed synthesis. When multiple people share context, they can advance their collective understanding of the topic through conversation and standardized processes and conventions. \n\nTo have shared context, people must be on the same page. Their working styles align. They understand how what they're examining should fit into their overall goal. They are aware of the nuance in the field(s) they're researching. In simple terms, they know how to work with one another on the problem they're working on.   \n\nBut there is a very [[[[[CLM]([[CLM|significant barrier]] - Interdisciplinary teamwork is hard]]) to team-based [[Convergence]] because of this bottleneck of not being able to have a shared \"dataset\" of ideas that satisfy the properties. Our external representations that are **shareable** lack one or more of those properties. [[((79OcTyQZR|*]])) [[((9eAC3T91o|*]]))\n\nWhen we did see distributed synthesis in our research, people would almost always bring someone else into their work through a feedback role, as that lowers the burden of the shared dataset requirement.  [[((HXYWjd8Jm|*]]))\n\nInstead of involving peers in the full synthesis process, [[B5]] would ask concise questions to his peers that would support him  [[B5]] and [[R10]] seek feedback only from trusted individuals. TA comes up with a pitch, bringing people along his line of questioning. He wants to present others with a gateway into the topic he's exploring. \n\nOftentimes, his solution to get people up to speed is a **gateway analogy,** where he presents his idea through the lens of one his audience might understand.\n\nIn our interviews, virtually everyone struggled to bring other people up to speed on their projects, but the theme of a **collective narrative** emerged as a pattern of people who are on the same page.\n\nAt this point, the synthesizer would either find an individual with shared context, or they would need to come up with a concise framing to act as gateway analogies and simple entry points to share.[[((qjcwxhvEe|*]]))\n\nTo find those entry points, [[B5]] considers the following questions: What's a common way to frame this that others can relate to? How can I get someone else to think this is their own idea? What will help someone else get it? What motivated the project?\n\nOthers talked about conversations as a framing mechanism to drive the process of synthesis.  [[R16]] uses [[conversations, chats with others]] as her primary form of synthesis. She finds the form of chat to be more conversational and feels its easier to solve a problem with an audience in mind or if you're talking to someone.  For her, the very act of framing the thoughts so her partner could understand clarifies her thinking.\n\n## Find or create shared context\nThis suggests two categories of solutions to enable synthesis with others:\n\t- **1. Connect people who share context.** This remains an area for further research, but obvious solutions include finding other people who write about similar concepts or enabling the formation of communities and querying for overlap between people.\n\t- **2. Design mechanisms to help people gain context quickly.** In order to do this, we would need to facilitate knowledge transfer from experts to beginners. This is a difficult problem. As described earlier, experts prefer to work on their own or with people who already share context **because** their ability to move fast depends on omitting the basics. Solutions to this problem will involve **lowering the barrier to add structure to notes.** \n\nA promising direction would be through enhanced composability, see [[C- Hypertext enables communication with high information density]] for more detail.\n\nOn the more radical end, graph queries could show readers X number of paths to traverse between their current understanding and a page that they want to read. It could infer what people already know through a variety of mechanisms - what they have read already, what they've written, what they have commented on.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Templates/YAML-Title-Only":{"title":"\u003c% tp.file.title %\u003e","content":"","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Templates/YAML-Title-with-author":{"title":"\u003c% tp.file.title %\u003e","content":"Authored By::","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/TheBrain":{"title":"TheBrain","content":"Authored by:: [[P- Brendan Langen]]\n\nThis video gives a basic intro to TheBrain. It has a graphical and textual interface for navigating and editing your documents.\n\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QEfvCE-vKTI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\nWithin the graphical interface, it occasionally uses a DSL. For example, creating many branching nodes is similar to writing out the cells of a csv, except you separate nodes with a semicolon.\n\nFor a comparison with [[Roam Research]], see the following video from [[P- Matt Goldenberg]].\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tC2iUwY6dAU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Twemex":{"title":"Twemex","content":"Authored by:: [[P- Brendan Langen]]\n\nTwemex is a Twitter search overlay that enables deeper exploratory and focused search. Twemex aims to help users construct a memex within their own accounts. \n\nAnother tool to assist with [[Search Behavior]]. \n\n![[Pasted image 20210921161522.png]]\n\nCreated by [[P- Geoffrey Litt]], whose philosophy lives on the twemex.app site. \n\n\u003e As a researcher, I love using Twitter as a _[memex](https://en.wikipedia.org/wiki/Memex)_: a tool for thinking and making connections between related ideas. I've used it to find so many fascinating people, thoughts, and discussions.\n\u003e But using Twitter this way has always felt like fighting the natural design of the tool. The Twitter product is trying to get me to refresh the feed, not grow my thoughts. That might make sense for most casual users, but I wanted something more powerful.\n\u003e So I started building a browser extension to make Twitter a better place to think. It all started out with a lightweight search UI, so that I could seamlessly search through tweets to reference while I was writing new threads, weaving together old ideas with new ones. Then I added a way to see people's best tweets, so I could get more from coming across an interesting user's profile.\n\u003e I used this extension myself for about 6 months, and after a while I couldn't live without it. Other people started asking me to share it, so I decided to turn it into a product. My hope is to build Twemex into a high-quality tool that makes Twitter a better memex for everyone.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Untitled":{"title":"Untitled Page","content":"","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Voiceliner":{"title":"Voiceliner","content":"Authored by:: [[P- Rob Haisfield]]\n\nBy [[P- Max Krieger]].\n\n- [[Twitter thread]] [[P- Robert Haisfield (Berkeley)]]: People who note down fleeting thoughts want the cream to rise to the top. Some consider the act of processing notes as a future chore \u0026amp; never get around to it\n    - Voiceliner merges the behavior of ranking relative importance with the act of recording\n    - Excellent behavioral strategy https://twitter.com/maxkriegers/status/1469977466693324803 [*](https://twitter.com/RobertHaisfield/status/1470612139660361730)\n    - Thank you, @maxkriegers, for this thought processor interaction.\n      - Key insight: people quick capture and worry about losing important thoughts. However, as you write your quick thoughts, you have a general sense of how important they might be. Salience is key metadata! [*](https://twitter.com/RobertHaisfield/status/1470612495769292801)\n      - Why is this behavioral product strategy?\n        - [[P- Max Krieger]] wants to filter only the best quick capture notes into his general corpus. Traditionally, that would require him to review all of his notes and process them. Now that happens at the time of recording a note. [*](https://twitter.com/RobertHaisfield/status/1470615768937033728)\n      - He flipped the script on processing behaviors and when people see reward.\n        - Traditional quick capture: write now, process later. Processing can disrupt your creative flow and takes a lot of energy.\n        - Voiceliner: Process notes as you go. Later only review what is important. [*](https://twitter.com/RobertHaisfield/status/1470615769788551169)\n      - What people DO while using an app dramatically changes their outcomes.\n        - Given user goal W, people have to do X, Y, and Z behaviors. Y feels like a chore, so they don't do it. They fail.\n        - @maxkriegers merges X with Y in a fluid way, increasing the user's probability of success. [*](https://twitter.com/RobertHaisfield/status/1470616865164517380)\n      - I agree with @mekarpeles. Knowledge work is work, and one must lift weights. Reviewing, refining, \u0026amp; iterating, notes is the work\n        - People want to mine and refine their best thoughts, but it's effortful. There are many approaches to this behavioral problem!\n        - https://twitter.com/mekarpeles/status/1470616391011209217?s=20 [*](https://twitter.com/RobertHaisfield/status/1470618433465114624)\n      - [[P- Mek]]: Shame it didn't include your original tweet which I think is well argued and merits attention! üòä\n        - https://twitter.com/RobertHaisfield/status/1470612139660361730 [*](https://twitter.com/mekarpeles/status/1470619069737013248)\n\n    - [[P- Mek]]: I think your whole tweet is ü•á with a caveat:\n      - \u0026gt; Some consider the act of processing notes as a future chore\n      - One may make chores less painful \u0026amp; automate minutiae, but, \"There is no royal road to geometry.\" One still must lift weights.\n      - Training is Working\n      - https://mek.fyi/posts/in-defense-of-quantified-self [*](https://twitter.com/mekarpeles/status/1470616391011209217)\n      - I agree with your take here. Some behaviors simply have to be done in order to achieve ideal outcomes.\n        - @JoelChan86 and I explore the theme of people \"eating their broccoli\" and different behavioral design approaches in this video\n        - https://www.youtube.com/watch?v=PrFfYF7A8J0\u0026t=2s [*](https://twitter.com/RobertHaisfield/status/1470618913276788738)\n        - [[P- Mek]]: thanks for sharing [*](https://twitter.com/mekarpeles/status/1470619473757491205)\n\n        - What knowledge work weights do you believe the personas being discussed in this thread might benefit from? [*](https://twitter.com/RobertHaisfield/status/1470619895641477121)\n          - [[P- Mek]]: 5/ Quality of time; @aaronsw eludes to this in http://www.aaronsw.com/weblog/productivity. Different tasks take different energy levels. Apps being aware of that and gently presenting us with suggested actions accordingly seems kind/effective. [*](https://twitter.com/mekarpeles/status/1470623259074912257)\n\n          - [[P- Mek]]: 6/ I'm sure things can get meta very quickly. Visa vie https://twitter.com/mekarpeles/status/1470623259074912257, one's emotional state, disposition, or personal context may dictate what type of content one wants, and how verbose. Do I want a Google Now card? The wiki article? Or the comprehensive library shelf? [*](https://twitter.com/mekarpeles/status/1470623913059180545)\n\n          - [[P- Mek]]: 1/ First, I perceive there as being more informed experts than myself. Second, it depends what the goal is. Memorization? Recall? Meeting deadlines? Organization?\n            - I like the idea of pairing spaced repetition (media I'd like to experience again, TODOs, etc). [*](https://twitter.com/mekarpeles/status/1470621339908296704)\n\n          - [[P- Mek]]: 2/ I think technology can help inform weights, pose us questions \u0026amp; recommendations, \u0026amp; predict labels correctly. If we want to strengthen associations in our mind, this needs to be trained somehow. SRS is one way; most activities/games in life are some form of SRS. [*](https://twitter.com/mekarpeles/status/1470621596020785153)\n\n          - [[P- Mek]]: 3/ More than the technique, I think incentive alignment and emotional appeal are important. I believe I recall @andy_matuschak + @edelwax having interesting thoughts on design oriented around happy, positive, social, \u0026amp; emotional experiences. [*](https://twitter.com/mekarpeles/status/1470622320574218245)\n\n          - [[P- Mek]]: 4/ I think another factor is geo-spatial/temporal/just-in-time-context-specific recommendations. e.g. you're at a doctor's office, you're at the grocery store. [*](https://twitter.com/mekarpeles/status/1470622784363585536)\n\n- [[Twitter thread]] [[P- Max Krieger]]: üîÆ I made an app! What if we took the \"hold to record\" interaction too far? I decided to find out and made a new kind of quick capture. Like voice memos, but with a whole lot more oomph. Meet Voiceliner.\n    - https://a9.io/voiceliner/ [*](https://twitter.com/maxkriegers/status/1469977440030060544)\n    - 4+ months of on-and-off work led to the best way to braindump I know of. It's inspired by long conversations with friends, where scattered fragments of ideas and references come and go. What if you could save all of those, quickly, in a structured way? [*](https://twitter.com/maxkriegers/status/1469977441191882759)\n      - The app auto-transcribes what you tell it, but crucially, doesn't discard the original recording. The transcription is so you can recognize keywords, but your voice is treated as the \"source of truth\" to play back. [*](https://twitter.com/maxkriegers/status/1469977442152419329)\n      - You can indent notes under other notes by swiping. While you're recording, drag up to set a \"temperature\", so you remember if something's important. These interactions don't need eyes, just gestural memory. Like an instrument, a gadget. https://t.co/dquWzCSaE3 [*](https://twitter.com/maxkriegers/status/1469977466693324803)\n        - ![](https://pbs.twimg.com/ext_tw_video_thumb/1469953265609576449/pu/img/8d4-14pjnDhcudHp.jpg)\n      - I love walking the streets of SF with Voiceliner. Letting my mind wander or focus, knowing I can capture the flow of whatever I‚Äôm thinking about without stopping and typing. I have a special \"üö∂Walking\" list for these more reflective notes. Their locations end up on a map! https://t.co/QuV9l6FQgE [*](https://twitter.com/maxkriegers/status/1469977473009872897)\n        - ![](https://pbs.twimg.com/media/FGZS7K0VUAAMgw7.jpg)\n      - I owe many thanks to my alpha tester friends. As well as @lumar_isa, since it is an understatement to call her a magician.\n        - The app still has its bugs, and you're welcome to contribute if you know any Flutter https://github.com/maxkrieger/voiceliner [*](https://twitter.com/maxkriegers/status/1469977475262279680)\n      - So sorry, Android users! Need to get to the bottom of this and don‚Äôt know enough android users. It worked perfectly in the simulator‚Ä¶ https://twitter.com/NoteApps/status/1470050993056501763 [*](https://twitter.com/maxkriegers/status/1470210876225429510)\n      - I think we fixed it! üé§üé§üé§ [*](https://twitter.com/maxkriegers/status/1470477484084928521)\n      - Re: apple watch.. I need to buy one first.... https://twitter.com/michielrutjes/status/1470088275486519309 [*](https://twitter.com/maxkriegers/status/1470919068127416320)\n\n    - [[P- Tyler Angert]]: Lfg boi can‚Äôt wait to put all my lil braindumps all over the map [*](https://twitter.com/tylerangert/status/1470197646858067970)\n      - hope it can handle the tangert dumptruck üööüöö [*](https://twitter.com/maxkriegers/status/1470318434839785472)","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Waldo":{"title":"Waldo","content":"Authored by:: [[P- Brendan Langen]]\n\nWaldo is a browser extension that amplifies Google search via advanced operators - scanning all keywords, images, and sentences on each webpage without having to open any links. [[C- Search terms express intentions]], and Waldo's search matches keywords and highlights as they appear in each sentence from the webpages found.\n\nWaldo's unique benefit comes from search within Waldo's own search engine. Users can add on keywords within the search to hone the accuracy of what they are searching for [(2:20 mark)](https://www.youtube.com/watch?v=YROf9Iixq7o)\n![[Pasted image 20210918124429.png]]. [[C- An exploratory search system should help the reader cumulatively gain information]], and Waldo enables this through its design. \n\nWaldo is built almost as a DSL, affording users to improve their level of search depth as time goes on [[C- A DSL enables semantic self-expression]], and Waldo has [[C- Search terms should have smart defaults so people don't have to always use semantic self-expression|smart defaults so people don't have to always use semantic self-expression]].\n\n[[P- Geoffrey Litt]]'s [[Twemex]] offers similar functionality as an override to Twitter's search. \n\nWaldo also offers on-demand research as a service, an interesting add-on to consider regarding [[Q- What community roles are necessary in a decentralized knowledge graph|roles needed in a decentralized discourse graph]].\n\nThis informs [[content/garden/LitReview/I- Search as a part of the primitive design]], and may speak to the development of a new feature. \n\nhttps://chrome.google.com/webstore/detail/waldo-%E2%80%93-search-less-see-m/codlehhdmfjjenohbcibmhhedmfmefib\n\nhttps://www.waldo.fyi/\n\nSearch enablement.\n![[Pasted image 20210918123446.png]]\nExtracting data. \n![[Pasted image 20210918123522.png]]\nFocused views. \n![[Pasted image 20210918123618.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/Wikum":{"title":"Wikum","content":"Authored by:: [[P- Brendan Langen]]\n\nWikum is a tool for rapidly organizing comments via recursive summarization in internet forums, affording a reader different views at the most important bits of information. \n\nWikum aims to help readers see a summary tree of the main points of discussion. Because [[C- Compression is necessary for synthesis]], a version of this could act as a [[primitive design]]. \n\n[[C- Wikum allows you to summarize groups of comments on a Hacker News style forum]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/WorldBrain-Memex":{"title":"WorldBrain Memex","content":"Authored by:: [[P- Brendan Langen]]\n\nWorldBrain's Memex is an open-source, privacy-focused browser extension to search, annotate, organize and share your online research.  \n\nWorldBrain's Memex aims to eliminate time spent bookmarking, retracing steps to recall an old webpage, or copy-pasting notes into scattered documents.\n\nHeavily inspired by Vannevar Bush's vision of a Memex. \n\nCreated by - [[P- Oliver Sauter]]\n\nhttps://github.com/WorldBrain/Memex\n\nBase UI\n![[Pasted image 20210915181051.png]]\n\nAnnotate in page, like [[Hypothesis]]\n![[Pasted image 20210915181259.png]]","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/ZUI":{"title":"ZUI","content":"Authored by:: [[P- Brendan Langen]]\n\nA Zoomable User Interface, or ZUI, affords different views and layers to explore within a tool. \n\nExamples: \nThis can be seen in the form of:\n- graph views (like in [[Obsidian|Obsidian]]),\n- multiple layers of description (like [[Kosmik]]), or\n- foldable comment summaries (like in [[Wikum|Wikum]])\n- Many examples here: https://twitter.com/MatthewWSiu/status/1228155105683263490?ref_src=twsrc%5Etfw","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/content-addressable":{"title":"content addressable","content":"Authored by:: [[P- Brendan Langen]]\n\nRefers to conditions when a structure can be modified, as discussed in the possibility of a [[I- A structural editor for data structures]]. An important piece is the content retaining the same identity while being addressed in a specific state. \n\nYou can see examples of this in the block-based nature of [[Roam Research|Roam]]'s [[primitive design]]. Each block has its own stable ID that can be, and comments or additional indented blocks can exist as their own IDs. The original block can always be referenced by the initial ID, no matter the variations that come later.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/end-user-programming":{"title":"end-user programming","content":"Authored by:: [[P- Brendan Langen]]\n\n Refers to the act of software users (which are not necessarily developers) altering and adding on to their programs, perhaps through a [[DSL]]. End user programming is a a prominent affordance of modern distributed tools and systems, as it empowers self-expression through the modification of the tool. \n \n See the excellent work from Ink + Switch [2019](https://www.inkandswitch.com/end-user-programming.html) describing the past and future of end-user programming.","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/flexible-compression":{"title":"flexible compression","content":"Authored by:: [[P- Brendan Langen]]\n\nCompression and contextualizability are both are needed for synthesis. Flexible compression aims to be lossless to ensure context is retained through transclusion. Yet, this is often difficult, because [[C- Compression and contextualizability are in tension]]. \n\nWhen we are viewing something at different levels of abstraction, we are bound to miss certain details. Thus, we ask [[Q- What is an interface for going up and down the ladder of abstraction]]? This speaks to the need for [[I- Lenses as a primitive]].","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/functional-programming":{"title":"functional programming","content":"","lastmodified":"2022-04-29T18:04:26.937161719Z","tags":null},"/incremental-formalization":{"title":"incremental formalization","content":"Authored by:: [[P- Brendan Langen]]\n\nIncremental formalization is a powerful design pattern for overcoming risks of formality, as described in [[R- Formality Considered Harmful]]. [[C- Synthesis tools need to support incremental formalization]]. Information is added in an informal fashion to begin, before formalizing once the task becomes clearer. [[C- Context is necessary for knowledge reuse]], but this is difficult before we understand the task at hand.\n\nThis is a similar approach to [[P- Tiago Forte]]'s progressive summarization.","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/config":{"title":"Configuration","content":"## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml\nname: Your name here! # Shows in the footer\nenableToc: true # Whether to show a Table of Contents\nenableLinkPreview: true # whether to render card previews for links\ndescription: Page description to show to search engines\npage_title: Quartz Example Page # Default Page Title\n\nlinks: # Links to show in footer\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml\nenableLegend: false # automatically generate a legend\nenableDrag: true # allow dragging nodes in the graph\nenableZoom: true # allow zooming and panning the graph\ndepth: -1 # how many neighbours of the current node to show (-1 is all nodes)\npaths: # colour specific nodes path off of their path\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what actually gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Multilingual\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"---\n\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\nüîó [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.*\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```markdown","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"---\n\n## GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`.\n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`.\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"---\n\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"If you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```shell\n# Install and link `hugo-obsidian` locally\n$ go install github.com/jackyzha0/hugo-obsidian@latest\n\n# Navigate to your local Quartz folder\n$ cd \u003clocation-of-your-local-quartz\u003e\n\n# Scrape all links in your Quartz folder and generate info for Quartz\n$ hugo-obsidian -input=content -output=assets/indices -index -root=.\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```\n# Navigate to your local Quartz folder\n$ cd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\n$ hugo server\n\n# View your site in a browser at http://localhost:1313/\n```","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/setup":{"title":"Setup","content":"## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\n$ git clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n‚úèÔ∏è [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Updating\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n\n# or, if you don't want the interactive parts and just want the update\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e ‚ö†Ô∏è **WARNING** ‚ö†Ô∏è\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"Want to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://garden.jzhao.xyz/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/primitive-design":{"title":"primitive design","content":"Authored by:: [[P- Brendan Langen]]\n\nComponents of a tool's base layer that afford user behavior. \n\nThese are the building blocks of [[Q- What are powerful interfaces for entering information into a discourse graph|powerful interfaces for entering information into a discourse graph]].","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/search-or-create":{"title":"search-or-create","content":"Authored By:: [[P- Rob Haisfield]]\n\nIn [[Notational Velocity]], this was a mechanic where you create new pages through the search bar. You could either open one of the results or create a new page with your search query as the title. This is conceptually similar to [[autocomplete]].","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/sensemaking":{"title":"sensemaking","content":"Authored by:: [[P- Rob Haisfield]]\n\n[[C- Sensemaking models partially model scholarly synthesis]]\n\n[[C- Sensemaking involves creating and manipulating a representation from raw data that makes some downstream task easier]]\n\n[[C- Synthesis is sensemaking on hard mode]]","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/structural-editor":{"title":"structural editor","content":"","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null},"/structure-in-hindsight":{"title":"structure in hindsight","content":"","lastmodified":"2022-04-29T18:04:26.993161942Z","tags":null}}